
MINI_PROJECT1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000014d4  00001568  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800068  00800068  00001570  2**0
                  ALLOC
  3 .stab         00000b70  00000000  00000000  00001570  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000899  00000000  00000000  000020e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00002979  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00002ab9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00002c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00004872  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000575d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000650c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000666c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000068f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000070c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
       2:	00 00       	nop
       4:	20 c6       	rjmp	.+3136   	; 0xc46 <__vector_1>
       6:	00 00       	nop
       8:	46 c6       	rjmp	.+3212   	; 0xc96 <__vector_2>
       a:	00 00       	nop
       c:	3f c0       	rjmp	.+126    	; 0x8c <__bad_interrupt>
       e:	00 00       	nop
      10:	3d c0       	rjmp	.+122    	; 0x8c <__bad_interrupt>
      12:	00 00       	nop
      14:	3b c0       	rjmp	.+118    	; 0x8c <__bad_interrupt>
      16:	00 00       	nop
      18:	f7 c5       	rjmp	.+3054   	; 0xc08 <__vector_6>
      1a:	00 00       	nop
      1c:	37 c0       	rjmp	.+110    	; 0x8c <__bad_interrupt>
      1e:	00 00       	nop
      20:	35 c0       	rjmp	.+106    	; 0x8c <__bad_interrupt>
      22:	00 00       	nop
      24:	33 c0       	rjmp	.+102    	; 0x8c <__bad_interrupt>
      26:	00 00       	nop
      28:	31 c0       	rjmp	.+98     	; 0x8c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	2f c0       	rjmp	.+94     	; 0x8c <__bad_interrupt>
      2e:	00 00       	nop
      30:	2d c0       	rjmp	.+90     	; 0x8c <__bad_interrupt>
      32:	00 00       	nop
      34:	2b c0       	rjmp	.+86     	; 0x8c <__bad_interrupt>
      36:	00 00       	nop
      38:	29 c0       	rjmp	.+82     	; 0x8c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	27 c0       	rjmp	.+78     	; 0x8c <__bad_interrupt>
      3e:	00 00       	nop
      40:	25 c0       	rjmp	.+74     	; 0x8c <__bad_interrupt>
      42:	00 00       	nop
      44:	23 c0       	rjmp	.+70     	; 0x8c <__bad_interrupt>
      46:	00 00       	nop
      48:	4e c6       	rjmp	.+3228   	; 0xce6 <__vector_18>
      4a:	00 00       	nop
      4c:	1f c0       	rjmp	.+62     	; 0x8c <__bad_interrupt>
      4e:	00 00       	nop
      50:	1d c0       	rjmp	.+58     	; 0x8c <__bad_interrupt>
	...

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ae 36       	cpi	r26, 0x6E	; 110
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e4 ed       	ldi	r30, 0xD4	; 212
      78:	f4 e1       	ldi	r31, 0x14	; 20
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	49 d6       	rcall	.+3218   	; 0xd1a <main>
      88:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <_exit>

0000008c <__bad_interrupt>:
      8c:	b9 cf       	rjmp	.-142    	; 0x0 <__vectors>

0000008e <__fixunssfsi>:
      8e:	ef 92       	push	r14
      90:	ff 92       	push	r15
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	7b 01       	movw	r14, r22
      98:	8c 01       	movw	r16, r24
      9a:	20 e0       	ldi	r18, 0x00	; 0
      9c:	30 e0       	ldi	r19, 0x00	; 0
      9e:	40 e0       	ldi	r20, 0x00	; 0
      a0:	5f e4       	ldi	r21, 0x4F	; 79
      a2:	e0 d2       	rcall	.+1472   	; 0x664 <__gesf2>
      a4:	88 23       	and	r24, r24
      a6:	7c f0       	brlt	.+30     	; 0xc6 <__fixunssfsi+0x38>
      a8:	c8 01       	movw	r24, r16
      aa:	b7 01       	movw	r22, r14
      ac:	20 e0       	ldi	r18, 0x00	; 0
      ae:	30 e0       	ldi	r19, 0x00	; 0
      b0:	40 e0       	ldi	r20, 0x00	; 0
      b2:	5f e4       	ldi	r21, 0x4F	; 79
      b4:	60 d1       	rcall	.+704    	; 0x376 <__subsf3>
      b6:	2c d3       	rcall	.+1624   	; 0x710 <__fixsfsi>
      b8:	9b 01       	movw	r18, r22
      ba:	ac 01       	movw	r20, r24
      bc:	20 50       	subi	r18, 0x00	; 0
      be:	30 40       	sbci	r19, 0x00	; 0
      c0:	40 40       	sbci	r20, 0x00	; 0
      c2:	50 48       	sbci	r21, 0x80	; 128
      c4:	05 c0       	rjmp	.+10     	; 0xd0 <__fixunssfsi+0x42>
      c6:	c8 01       	movw	r24, r16
      c8:	b7 01       	movw	r22, r14
      ca:	22 d3       	rcall	.+1604   	; 0x710 <__fixsfsi>
      cc:	9b 01       	movw	r18, r22
      ce:	ac 01       	movw	r20, r24
      d0:	b9 01       	movw	r22, r18
      d2:	ca 01       	movw	r24, r20
      d4:	1f 91       	pop	r17
      d6:	0f 91       	pop	r16
      d8:	ff 90       	pop	r15
      da:	ef 90       	pop	r14
      dc:	08 95       	ret

000000de <_fpadd_parts>:
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b0 e0       	ldi	r27, 0x00	; 0
      e2:	e5 e7       	ldi	r30, 0x75	; 117
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__prologue_saves__>
      ea:	dc 01       	movw	r26, r24
      ec:	2b 01       	movw	r4, r22
      ee:	fa 01       	movw	r30, r20
      f0:	9c 91       	ld	r25, X
      f2:	92 30       	cpi	r25, 0x02	; 2
      f4:	08 f4       	brcc	.+2      	; 0xf8 <_fpadd_parts+0x1a>
      f6:	39 c1       	rjmp	.+626    	; 0x36a <_fpadd_parts+0x28c>
      f8:	eb 01       	movw	r28, r22
      fa:	88 81       	ld	r24, Y
      fc:	82 30       	cpi	r24, 0x02	; 2
      fe:	08 f4       	brcc	.+2      	; 0x102 <_fpadd_parts+0x24>
     100:	33 c1       	rjmp	.+614    	; 0x368 <_fpadd_parts+0x28a>
     102:	94 30       	cpi	r25, 0x04	; 4
     104:	69 f4       	brne	.+26     	; 0x120 <_fpadd_parts+0x42>
     106:	84 30       	cpi	r24, 0x04	; 4
     108:	09 f0       	breq	.+2      	; 0x10c <_fpadd_parts+0x2e>
     10a:	2f c1       	rjmp	.+606    	; 0x36a <_fpadd_parts+0x28c>
     10c:	11 96       	adiw	r26, 0x01	; 1
     10e:	9c 91       	ld	r25, X
     110:	11 97       	sbiw	r26, 0x01	; 1
     112:	89 81       	ldd	r24, Y+1	; 0x01
     114:	98 17       	cp	r25, r24
     116:	09 f4       	brne	.+2      	; 0x11a <_fpadd_parts+0x3c>
     118:	28 c1       	rjmp	.+592    	; 0x36a <_fpadd_parts+0x28c>
     11a:	a0 e6       	ldi	r26, 0x60	; 96
     11c:	b0 e0       	ldi	r27, 0x00	; 0
     11e:	25 c1       	rjmp	.+586    	; 0x36a <_fpadd_parts+0x28c>
     120:	84 30       	cpi	r24, 0x04	; 4
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x48>
     124:	21 c1       	rjmp	.+578    	; 0x368 <_fpadd_parts+0x28a>
     126:	82 30       	cpi	r24, 0x02	; 2
     128:	a9 f4       	brne	.+42     	; 0x154 <_fpadd_parts+0x76>
     12a:	92 30       	cpi	r25, 0x02	; 2
     12c:	09 f0       	breq	.+2      	; 0x130 <_fpadd_parts+0x52>
     12e:	1d c1       	rjmp	.+570    	; 0x36a <_fpadd_parts+0x28c>
     130:	9a 01       	movw	r18, r20
     132:	ad 01       	movw	r20, r26
     134:	88 e0       	ldi	r24, 0x08	; 8
     136:	ea 01       	movw	r28, r20
     138:	09 90       	ld	r0, Y+
     13a:	ae 01       	movw	r20, r28
     13c:	e9 01       	movw	r28, r18
     13e:	09 92       	st	Y+, r0
     140:	9e 01       	movw	r18, r28
     142:	81 50       	subi	r24, 0x01	; 1
     144:	c1 f7       	brne	.-16     	; 0x136 <_fpadd_parts+0x58>
     146:	e2 01       	movw	r28, r4
     148:	89 81       	ldd	r24, Y+1	; 0x01
     14a:	11 96       	adiw	r26, 0x01	; 1
     14c:	9c 91       	ld	r25, X
     14e:	89 23       	and	r24, r25
     150:	81 83       	std	Z+1, r24	; 0x01
     152:	08 c1       	rjmp	.+528    	; 0x364 <_fpadd_parts+0x286>
     154:	92 30       	cpi	r25, 0x02	; 2
     156:	09 f4       	brne	.+2      	; 0x15a <_fpadd_parts+0x7c>
     158:	07 c1       	rjmp	.+526    	; 0x368 <_fpadd_parts+0x28a>
     15a:	12 96       	adiw	r26, 0x02	; 2
     15c:	2d 90       	ld	r2, X+
     15e:	3c 90       	ld	r3, X
     160:	13 97       	sbiw	r26, 0x03	; 3
     162:	eb 01       	movw	r28, r22
     164:	8a 81       	ldd	r24, Y+2	; 0x02
     166:	9b 81       	ldd	r25, Y+3	; 0x03
     168:	14 96       	adiw	r26, 0x04	; 4
     16a:	ad 90       	ld	r10, X+
     16c:	bd 90       	ld	r11, X+
     16e:	cd 90       	ld	r12, X+
     170:	dc 90       	ld	r13, X
     172:	17 97       	sbiw	r26, 0x07	; 7
     174:	ec 80       	ldd	r14, Y+4	; 0x04
     176:	fd 80       	ldd	r15, Y+5	; 0x05
     178:	0e 81       	ldd	r16, Y+6	; 0x06
     17a:	1f 81       	ldd	r17, Y+7	; 0x07
     17c:	91 01       	movw	r18, r2
     17e:	28 1b       	sub	r18, r24
     180:	39 0b       	sbc	r19, r25
     182:	b9 01       	movw	r22, r18
     184:	37 ff       	sbrs	r19, 7
     186:	04 c0       	rjmp	.+8      	; 0x190 <_fpadd_parts+0xb2>
     188:	66 27       	eor	r22, r22
     18a:	77 27       	eor	r23, r23
     18c:	62 1b       	sub	r22, r18
     18e:	73 0b       	sbc	r23, r19
     190:	60 32       	cpi	r22, 0x20	; 32
     192:	71 05       	cpc	r23, r1
     194:	0c f0       	brlt	.+2      	; 0x198 <_fpadd_parts+0xba>
     196:	61 c0       	rjmp	.+194    	; 0x25a <_fpadd_parts+0x17c>
     198:	12 16       	cp	r1, r18
     19a:	13 06       	cpc	r1, r19
     19c:	6c f5       	brge	.+90     	; 0x1f8 <_fpadd_parts+0x11a>
     19e:	37 01       	movw	r6, r14
     1a0:	48 01       	movw	r8, r16
     1a2:	06 2e       	mov	r0, r22
     1a4:	04 c0       	rjmp	.+8      	; 0x1ae <_fpadd_parts+0xd0>
     1a6:	96 94       	lsr	r9
     1a8:	87 94       	ror	r8
     1aa:	77 94       	ror	r7
     1ac:	67 94       	ror	r6
     1ae:	0a 94       	dec	r0
     1b0:	d2 f7       	brpl	.-12     	; 0x1a6 <_fpadd_parts+0xc8>
     1b2:	21 e0       	ldi	r18, 0x01	; 1
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e0       	ldi	r20, 0x00	; 0
     1b8:	50 e0       	ldi	r21, 0x00	; 0
     1ba:	04 c0       	rjmp	.+8      	; 0x1c4 <_fpadd_parts+0xe6>
     1bc:	22 0f       	add	r18, r18
     1be:	33 1f       	adc	r19, r19
     1c0:	44 1f       	adc	r20, r20
     1c2:	55 1f       	adc	r21, r21
     1c4:	6a 95       	dec	r22
     1c6:	d2 f7       	brpl	.-12     	; 0x1bc <_fpadd_parts+0xde>
     1c8:	21 50       	subi	r18, 0x01	; 1
     1ca:	30 40       	sbci	r19, 0x00	; 0
     1cc:	40 40       	sbci	r20, 0x00	; 0
     1ce:	50 40       	sbci	r21, 0x00	; 0
     1d0:	2e 21       	and	r18, r14
     1d2:	3f 21       	and	r19, r15
     1d4:	40 23       	and	r20, r16
     1d6:	51 23       	and	r21, r17
     1d8:	21 15       	cp	r18, r1
     1da:	31 05       	cpc	r19, r1
     1dc:	41 05       	cpc	r20, r1
     1de:	51 05       	cpc	r21, r1
     1e0:	21 f0       	breq	.+8      	; 0x1ea <_fpadd_parts+0x10c>
     1e2:	21 e0       	ldi	r18, 0x01	; 1
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	40 e0       	ldi	r20, 0x00	; 0
     1e8:	50 e0       	ldi	r21, 0x00	; 0
     1ea:	79 01       	movw	r14, r18
     1ec:	8a 01       	movw	r16, r20
     1ee:	e6 28       	or	r14, r6
     1f0:	f7 28       	or	r15, r7
     1f2:	08 29       	or	r16, r8
     1f4:	19 29       	or	r17, r9
     1f6:	3c c0       	rjmp	.+120    	; 0x270 <_fpadd_parts+0x192>
     1f8:	23 2b       	or	r18, r19
     1fa:	d1 f1       	breq	.+116    	; 0x270 <_fpadd_parts+0x192>
     1fc:	26 0e       	add	r2, r22
     1fe:	37 1e       	adc	r3, r23
     200:	35 01       	movw	r6, r10
     202:	46 01       	movw	r8, r12
     204:	06 2e       	mov	r0, r22
     206:	04 c0       	rjmp	.+8      	; 0x210 <_fpadd_parts+0x132>
     208:	96 94       	lsr	r9
     20a:	87 94       	ror	r8
     20c:	77 94       	ror	r7
     20e:	67 94       	ror	r6
     210:	0a 94       	dec	r0
     212:	d2 f7       	brpl	.-12     	; 0x208 <_fpadd_parts+0x12a>
     214:	21 e0       	ldi	r18, 0x01	; 1
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	40 e0       	ldi	r20, 0x00	; 0
     21a:	50 e0       	ldi	r21, 0x00	; 0
     21c:	04 c0       	rjmp	.+8      	; 0x226 <_fpadd_parts+0x148>
     21e:	22 0f       	add	r18, r18
     220:	33 1f       	adc	r19, r19
     222:	44 1f       	adc	r20, r20
     224:	55 1f       	adc	r21, r21
     226:	6a 95       	dec	r22
     228:	d2 f7       	brpl	.-12     	; 0x21e <_fpadd_parts+0x140>
     22a:	21 50       	subi	r18, 0x01	; 1
     22c:	30 40       	sbci	r19, 0x00	; 0
     22e:	40 40       	sbci	r20, 0x00	; 0
     230:	50 40       	sbci	r21, 0x00	; 0
     232:	2a 21       	and	r18, r10
     234:	3b 21       	and	r19, r11
     236:	4c 21       	and	r20, r12
     238:	5d 21       	and	r21, r13
     23a:	21 15       	cp	r18, r1
     23c:	31 05       	cpc	r19, r1
     23e:	41 05       	cpc	r20, r1
     240:	51 05       	cpc	r21, r1
     242:	21 f0       	breq	.+8      	; 0x24c <_fpadd_parts+0x16e>
     244:	21 e0       	ldi	r18, 0x01	; 1
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	40 e0       	ldi	r20, 0x00	; 0
     24a:	50 e0       	ldi	r21, 0x00	; 0
     24c:	59 01       	movw	r10, r18
     24e:	6a 01       	movw	r12, r20
     250:	a6 28       	or	r10, r6
     252:	b7 28       	or	r11, r7
     254:	c8 28       	or	r12, r8
     256:	d9 28       	or	r13, r9
     258:	0b c0       	rjmp	.+22     	; 0x270 <_fpadd_parts+0x192>
     25a:	82 15       	cp	r24, r2
     25c:	93 05       	cpc	r25, r3
     25e:	2c f0       	brlt	.+10     	; 0x26a <_fpadd_parts+0x18c>
     260:	1c 01       	movw	r2, r24
     262:	aa 24       	eor	r10, r10
     264:	bb 24       	eor	r11, r11
     266:	65 01       	movw	r12, r10
     268:	03 c0       	rjmp	.+6      	; 0x270 <_fpadd_parts+0x192>
     26a:	ee 24       	eor	r14, r14
     26c:	ff 24       	eor	r15, r15
     26e:	87 01       	movw	r16, r14
     270:	11 96       	adiw	r26, 0x01	; 1
     272:	9c 91       	ld	r25, X
     274:	d2 01       	movw	r26, r4
     276:	11 96       	adiw	r26, 0x01	; 1
     278:	8c 91       	ld	r24, X
     27a:	98 17       	cp	r25, r24
     27c:	09 f4       	brne	.+2      	; 0x280 <_fpadd_parts+0x1a2>
     27e:	45 c0       	rjmp	.+138    	; 0x30a <_fpadd_parts+0x22c>
     280:	99 23       	and	r25, r25
     282:	39 f0       	breq	.+14     	; 0x292 <_fpadd_parts+0x1b4>
     284:	a8 01       	movw	r20, r16
     286:	97 01       	movw	r18, r14
     288:	2a 19       	sub	r18, r10
     28a:	3b 09       	sbc	r19, r11
     28c:	4c 09       	sbc	r20, r12
     28e:	5d 09       	sbc	r21, r13
     290:	06 c0       	rjmp	.+12     	; 0x29e <_fpadd_parts+0x1c0>
     292:	a6 01       	movw	r20, r12
     294:	95 01       	movw	r18, r10
     296:	2e 19       	sub	r18, r14
     298:	3f 09       	sbc	r19, r15
     29a:	40 0b       	sbc	r20, r16
     29c:	51 0b       	sbc	r21, r17
     29e:	57 fd       	sbrc	r21, 7
     2a0:	08 c0       	rjmp	.+16     	; 0x2b2 <_fpadd_parts+0x1d4>
     2a2:	11 82       	std	Z+1, r1	; 0x01
     2a4:	33 82       	std	Z+3, r3	; 0x03
     2a6:	22 82       	std	Z+2, r2	; 0x02
     2a8:	24 83       	std	Z+4, r18	; 0x04
     2aa:	35 83       	std	Z+5, r19	; 0x05
     2ac:	46 83       	std	Z+6, r20	; 0x06
     2ae:	57 83       	std	Z+7, r21	; 0x07
     2b0:	1d c0       	rjmp	.+58     	; 0x2ec <_fpadd_parts+0x20e>
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	81 83       	std	Z+1, r24	; 0x01
     2b6:	33 82       	std	Z+3, r3	; 0x03
     2b8:	22 82       	std	Z+2, r2	; 0x02
     2ba:	88 27       	eor	r24, r24
     2bc:	99 27       	eor	r25, r25
     2be:	dc 01       	movw	r26, r24
     2c0:	82 1b       	sub	r24, r18
     2c2:	93 0b       	sbc	r25, r19
     2c4:	a4 0b       	sbc	r26, r20
     2c6:	b5 0b       	sbc	r27, r21
     2c8:	84 83       	std	Z+4, r24	; 0x04
     2ca:	95 83       	std	Z+5, r25	; 0x05
     2cc:	a6 83       	std	Z+6, r26	; 0x06
     2ce:	b7 83       	std	Z+7, r27	; 0x07
     2d0:	0d c0       	rjmp	.+26     	; 0x2ec <_fpadd_parts+0x20e>
     2d2:	22 0f       	add	r18, r18
     2d4:	33 1f       	adc	r19, r19
     2d6:	44 1f       	adc	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	24 83       	std	Z+4, r18	; 0x04
     2dc:	35 83       	std	Z+5, r19	; 0x05
     2de:	46 83       	std	Z+6, r20	; 0x06
     2e0:	57 83       	std	Z+7, r21	; 0x07
     2e2:	82 81       	ldd	r24, Z+2	; 0x02
     2e4:	93 81       	ldd	r25, Z+3	; 0x03
     2e6:	01 97       	sbiw	r24, 0x01	; 1
     2e8:	93 83       	std	Z+3, r25	; 0x03
     2ea:	82 83       	std	Z+2, r24	; 0x02
     2ec:	24 81       	ldd	r18, Z+4	; 0x04
     2ee:	35 81       	ldd	r19, Z+5	; 0x05
     2f0:	46 81       	ldd	r20, Z+6	; 0x06
     2f2:	57 81       	ldd	r21, Z+7	; 0x07
     2f4:	da 01       	movw	r26, r20
     2f6:	c9 01       	movw	r24, r18
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	a1 09       	sbc	r26, r1
     2fc:	b1 09       	sbc	r27, r1
     2fe:	8f 5f       	subi	r24, 0xFF	; 255
     300:	9f 4f       	sbci	r25, 0xFF	; 255
     302:	af 4f       	sbci	r26, 0xFF	; 255
     304:	bf 43       	sbci	r27, 0x3F	; 63
     306:	28 f3       	brcs	.-54     	; 0x2d2 <_fpadd_parts+0x1f4>
     308:	0b c0       	rjmp	.+22     	; 0x320 <_fpadd_parts+0x242>
     30a:	91 83       	std	Z+1, r25	; 0x01
     30c:	33 82       	std	Z+3, r3	; 0x03
     30e:	22 82       	std	Z+2, r2	; 0x02
     310:	ea 0c       	add	r14, r10
     312:	fb 1c       	adc	r15, r11
     314:	0c 1d       	adc	r16, r12
     316:	1d 1d       	adc	r17, r13
     318:	e4 82       	std	Z+4, r14	; 0x04
     31a:	f5 82       	std	Z+5, r15	; 0x05
     31c:	06 83       	std	Z+6, r16	; 0x06
     31e:	17 83       	std	Z+7, r17	; 0x07
     320:	83 e0       	ldi	r24, 0x03	; 3
     322:	80 83       	st	Z, r24
     324:	24 81       	ldd	r18, Z+4	; 0x04
     326:	35 81       	ldd	r19, Z+5	; 0x05
     328:	46 81       	ldd	r20, Z+6	; 0x06
     32a:	57 81       	ldd	r21, Z+7	; 0x07
     32c:	57 ff       	sbrs	r21, 7
     32e:	1a c0       	rjmp	.+52     	; 0x364 <_fpadd_parts+0x286>
     330:	c9 01       	movw	r24, r18
     332:	aa 27       	eor	r26, r26
     334:	97 fd       	sbrc	r25, 7
     336:	a0 95       	com	r26
     338:	ba 2f       	mov	r27, r26
     33a:	81 70       	andi	r24, 0x01	; 1
     33c:	90 70       	andi	r25, 0x00	; 0
     33e:	a0 70       	andi	r26, 0x00	; 0
     340:	b0 70       	andi	r27, 0x00	; 0
     342:	56 95       	lsr	r21
     344:	47 95       	ror	r20
     346:	37 95       	ror	r19
     348:	27 95       	ror	r18
     34a:	82 2b       	or	r24, r18
     34c:	93 2b       	or	r25, r19
     34e:	a4 2b       	or	r26, r20
     350:	b5 2b       	or	r27, r21
     352:	84 83       	std	Z+4, r24	; 0x04
     354:	95 83       	std	Z+5, r25	; 0x05
     356:	a6 83       	std	Z+6, r26	; 0x06
     358:	b7 83       	std	Z+7, r27	; 0x07
     35a:	82 81       	ldd	r24, Z+2	; 0x02
     35c:	93 81       	ldd	r25, Z+3	; 0x03
     35e:	01 96       	adiw	r24, 0x01	; 1
     360:	93 83       	std	Z+3, r25	; 0x03
     362:	82 83       	std	Z+2, r24	; 0x02
     364:	df 01       	movw	r26, r30
     366:	01 c0       	rjmp	.+2      	; 0x36a <_fpadd_parts+0x28c>
     368:	d2 01       	movw	r26, r4
     36a:	cd 01       	movw	r24, r26
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
     370:	e2 e1       	ldi	r30, 0x12	; 18
     372:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__epilogue_restores__>

00000376 <__subsf3>:
     376:	a0 e2       	ldi	r26, 0x20	; 32
     378:	b0 e0       	ldi	r27, 0x00	; 0
     37a:	e1 ec       	ldi	r30, 0xC1	; 193
     37c:	f1 e0       	ldi	r31, 0x01	; 1
     37e:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__prologue_saves__+0x18>
     382:	69 83       	std	Y+1, r22	; 0x01
     384:	7a 83       	std	Y+2, r23	; 0x02
     386:	8b 83       	std	Y+3, r24	; 0x03
     388:	9c 83       	std	Y+4, r25	; 0x04
     38a:	2d 83       	std	Y+5, r18	; 0x05
     38c:	3e 83       	std	Y+6, r19	; 0x06
     38e:	4f 83       	std	Y+7, r20	; 0x07
     390:	58 87       	std	Y+8, r21	; 0x08
     392:	e9 e0       	ldi	r30, 0x09	; 9
     394:	ee 2e       	mov	r14, r30
     396:	f1 2c       	mov	r15, r1
     398:	ec 0e       	add	r14, r28
     39a:	fd 1e       	adc	r15, r29
     39c:	ce 01       	movw	r24, r28
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	b7 01       	movw	r22, r14
     3a2:	dc d2       	rcall	.+1464   	; 0x95c <__unpack_f>
     3a4:	8e 01       	movw	r16, r28
     3a6:	0f 5e       	subi	r16, 0xEF	; 239
     3a8:	1f 4f       	sbci	r17, 0xFF	; 255
     3aa:	ce 01       	movw	r24, r28
     3ac:	05 96       	adiw	r24, 0x05	; 5
     3ae:	b8 01       	movw	r22, r16
     3b0:	d5 d2       	rcall	.+1450   	; 0x95c <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	8c de       	rcall	.-744    	; 0xde <_fpadd_parts>
     3c6:	f5 d1       	rcall	.+1002   	; 0x7b2 <__pack_f>
     3c8:	a0 96       	adiw	r28, 0x20	; 32
     3ca:	e6 e0       	ldi	r30, 0x06	; 6
     3cc:	0c 94 59 0a 	jmp	0x14b2	; 0x14b2 <__epilogue_restores__+0x18>

000003d0 <__addsf3>:
     3d0:	a0 e2       	ldi	r26, 0x20	; 32
     3d2:	b0 e0       	ldi	r27, 0x00	; 0
     3d4:	ee ee       	ldi	r30, 0xEE	; 238
     3d6:	f1 e0       	ldi	r31, 0x01	; 1
     3d8:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__prologue_saves__+0x18>
     3dc:	69 83       	std	Y+1, r22	; 0x01
     3de:	7a 83       	std	Y+2, r23	; 0x02
     3e0:	8b 83       	std	Y+3, r24	; 0x03
     3e2:	9c 83       	std	Y+4, r25	; 0x04
     3e4:	2d 83       	std	Y+5, r18	; 0x05
     3e6:	3e 83       	std	Y+6, r19	; 0x06
     3e8:	4f 83       	std	Y+7, r20	; 0x07
     3ea:	58 87       	std	Y+8, r21	; 0x08
     3ec:	f9 e0       	ldi	r31, 0x09	; 9
     3ee:	ef 2e       	mov	r14, r31
     3f0:	f1 2c       	mov	r15, r1
     3f2:	ec 0e       	add	r14, r28
     3f4:	fd 1e       	adc	r15, r29
     3f6:	ce 01       	movw	r24, r28
     3f8:	01 96       	adiw	r24, 0x01	; 1
     3fa:	b7 01       	movw	r22, r14
     3fc:	af d2       	rcall	.+1374   	; 0x95c <__unpack_f>
     3fe:	8e 01       	movw	r16, r28
     400:	0f 5e       	subi	r16, 0xEF	; 239
     402:	1f 4f       	sbci	r17, 0xFF	; 255
     404:	ce 01       	movw	r24, r28
     406:	05 96       	adiw	r24, 0x05	; 5
     408:	b8 01       	movw	r22, r16
     40a:	a8 d2       	rcall	.+1360   	; 0x95c <__unpack_f>
     40c:	c7 01       	movw	r24, r14
     40e:	b8 01       	movw	r22, r16
     410:	ae 01       	movw	r20, r28
     412:	47 5e       	subi	r20, 0xE7	; 231
     414:	5f 4f       	sbci	r21, 0xFF	; 255
     416:	63 de       	rcall	.-826    	; 0xde <_fpadd_parts>
     418:	cc d1       	rcall	.+920    	; 0x7b2 <__pack_f>
     41a:	a0 96       	adiw	r28, 0x20	; 32
     41c:	e6 e0       	ldi	r30, 0x06	; 6
     41e:	0c 94 59 0a 	jmp	0x14b2	; 0x14b2 <__epilogue_restores__+0x18>

00000422 <__mulsf3>:
     422:	a0 e2       	ldi	r26, 0x20	; 32
     424:	b0 e0       	ldi	r27, 0x00	; 0
     426:	e7 e1       	ldi	r30, 0x17	; 23
     428:	f2 e0       	ldi	r31, 0x02	; 2
     42a:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__prologue_saves__>
     42e:	69 83       	std	Y+1, r22	; 0x01
     430:	7a 83       	std	Y+2, r23	; 0x02
     432:	8b 83       	std	Y+3, r24	; 0x03
     434:	9c 83       	std	Y+4, r25	; 0x04
     436:	2d 83       	std	Y+5, r18	; 0x05
     438:	3e 83       	std	Y+6, r19	; 0x06
     43a:	4f 83       	std	Y+7, r20	; 0x07
     43c:	58 87       	std	Y+8, r21	; 0x08
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	be 01       	movw	r22, r28
     444:	67 5f       	subi	r22, 0xF7	; 247
     446:	7f 4f       	sbci	r23, 0xFF	; 255
     448:	89 d2       	rcall	.+1298   	; 0x95c <__unpack_f>
     44a:	ce 01       	movw	r24, r28
     44c:	05 96       	adiw	r24, 0x05	; 5
     44e:	be 01       	movw	r22, r28
     450:	6f 5e       	subi	r22, 0xEF	; 239
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	83 d2       	rcall	.+1286   	; 0x95c <__unpack_f>
     456:	99 85       	ldd	r25, Y+9	; 0x09
     458:	92 30       	cpi	r25, 0x02	; 2
     45a:	88 f0       	brcs	.+34     	; 0x47e <__stack+0x1f>
     45c:	89 89       	ldd	r24, Y+17	; 0x11
     45e:	82 30       	cpi	r24, 0x02	; 2
     460:	c8 f0       	brcs	.+50     	; 0x494 <__stack+0x35>
     462:	94 30       	cpi	r25, 0x04	; 4
     464:	19 f4       	brne	.+6      	; 0x46c <__stack+0xd>
     466:	82 30       	cpi	r24, 0x02	; 2
     468:	51 f4       	brne	.+20     	; 0x47e <__stack+0x1f>
     46a:	04 c0       	rjmp	.+8      	; 0x474 <__stack+0x15>
     46c:	84 30       	cpi	r24, 0x04	; 4
     46e:	29 f4       	brne	.+10     	; 0x47a <__stack+0x1b>
     470:	92 30       	cpi	r25, 0x02	; 2
     472:	81 f4       	brne	.+32     	; 0x494 <__stack+0x35>
     474:	80 e6       	ldi	r24, 0x60	; 96
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	c6 c0       	rjmp	.+396    	; 0x606 <__stack+0x1a7>
     47a:	92 30       	cpi	r25, 0x02	; 2
     47c:	49 f4       	brne	.+18     	; 0x490 <__stack+0x31>
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	9a 85       	ldd	r25, Y+10	; 0x0a
     482:	8a 89       	ldd	r24, Y+18	; 0x12
     484:	98 13       	cpse	r25, r24
     486:	21 e0       	ldi	r18, 0x01	; 1
     488:	2a 87       	std	Y+10, r18	; 0x0a
     48a:	ce 01       	movw	r24, r28
     48c:	09 96       	adiw	r24, 0x09	; 9
     48e:	bb c0       	rjmp	.+374    	; 0x606 <__stack+0x1a7>
     490:	82 30       	cpi	r24, 0x02	; 2
     492:	49 f4       	brne	.+18     	; 0x4a6 <__stack+0x47>
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	9a 85       	ldd	r25, Y+10	; 0x0a
     498:	8a 89       	ldd	r24, Y+18	; 0x12
     49a:	98 13       	cpse	r25, r24
     49c:	21 e0       	ldi	r18, 0x01	; 1
     49e:	2a 8b       	std	Y+18, r18	; 0x12
     4a0:	ce 01       	movw	r24, r28
     4a2:	41 96       	adiw	r24, 0x11	; 17
     4a4:	b0 c0       	rjmp	.+352    	; 0x606 <__stack+0x1a7>
     4a6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4a8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4aa:	4f 84       	ldd	r4, Y+15	; 0x0f
     4ac:	58 88       	ldd	r5, Y+16	; 0x10
     4ae:	6d 88       	ldd	r6, Y+21	; 0x15
     4b0:	7e 88       	ldd	r7, Y+22	; 0x16
     4b2:	8f 88       	ldd	r8, Y+23	; 0x17
     4b4:	98 8c       	ldd	r9, Y+24	; 0x18
     4b6:	ee 24       	eor	r14, r14
     4b8:	ff 24       	eor	r15, r15
     4ba:	87 01       	movw	r16, r14
     4bc:	aa 24       	eor	r10, r10
     4be:	bb 24       	eor	r11, r11
     4c0:	65 01       	movw	r12, r10
     4c2:	40 e0       	ldi	r20, 0x00	; 0
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	70 e0       	ldi	r23, 0x00	; 0
     4ca:	e0 e0       	ldi	r30, 0x00	; 0
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	c1 01       	movw	r24, r2
     4d0:	81 70       	andi	r24, 0x01	; 1
     4d2:	90 70       	andi	r25, 0x00	; 0
     4d4:	89 2b       	or	r24, r25
     4d6:	e9 f0       	breq	.+58     	; 0x512 <__stack+0xb3>
     4d8:	e6 0c       	add	r14, r6
     4da:	f7 1c       	adc	r15, r7
     4dc:	08 1d       	adc	r16, r8
     4de:	19 1d       	adc	r17, r9
     4e0:	9a 01       	movw	r18, r20
     4e2:	ab 01       	movw	r20, r22
     4e4:	2a 0d       	add	r18, r10
     4e6:	3b 1d       	adc	r19, r11
     4e8:	4c 1d       	adc	r20, r12
     4ea:	5d 1d       	adc	r21, r13
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	a0 e0       	ldi	r26, 0x00	; 0
     4f2:	b0 e0       	ldi	r27, 0x00	; 0
     4f4:	e6 14       	cp	r14, r6
     4f6:	f7 04       	cpc	r15, r7
     4f8:	08 05       	cpc	r16, r8
     4fa:	19 05       	cpc	r17, r9
     4fc:	20 f4       	brcc	.+8      	; 0x506 <__stack+0xa7>
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	a0 e0       	ldi	r26, 0x00	; 0
     504:	b0 e0       	ldi	r27, 0x00	; 0
     506:	ba 01       	movw	r22, r20
     508:	a9 01       	movw	r20, r18
     50a:	48 0f       	add	r20, r24
     50c:	59 1f       	adc	r21, r25
     50e:	6a 1f       	adc	r22, r26
     510:	7b 1f       	adc	r23, r27
     512:	aa 0c       	add	r10, r10
     514:	bb 1c       	adc	r11, r11
     516:	cc 1c       	adc	r12, r12
     518:	dd 1c       	adc	r13, r13
     51a:	97 fe       	sbrs	r9, 7
     51c:	08 c0       	rjmp	.+16     	; 0x52e <__stack+0xcf>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	a8 2a       	or	r10, r24
     528:	b9 2a       	or	r11, r25
     52a:	ca 2a       	or	r12, r26
     52c:	db 2a       	or	r13, r27
     52e:	31 96       	adiw	r30, 0x01	; 1
     530:	e0 32       	cpi	r30, 0x20	; 32
     532:	f1 05       	cpc	r31, r1
     534:	49 f0       	breq	.+18     	; 0x548 <__stack+0xe9>
     536:	66 0c       	add	r6, r6
     538:	77 1c       	adc	r7, r7
     53a:	88 1c       	adc	r8, r8
     53c:	99 1c       	adc	r9, r9
     53e:	56 94       	lsr	r5
     540:	47 94       	ror	r4
     542:	37 94       	ror	r3
     544:	27 94       	ror	r2
     546:	c3 cf       	rjmp	.-122    	; 0x4ce <__stack+0x6f>
     548:	fa 85       	ldd	r31, Y+10	; 0x0a
     54a:	ea 89       	ldd	r30, Y+18	; 0x12
     54c:	2b 89       	ldd	r18, Y+19	; 0x13
     54e:	3c 89       	ldd	r19, Y+20	; 0x14
     550:	8b 85       	ldd	r24, Y+11	; 0x0b
     552:	9c 85       	ldd	r25, Y+12	; 0x0c
     554:	28 0f       	add	r18, r24
     556:	39 1f       	adc	r19, r25
     558:	2e 5f       	subi	r18, 0xFE	; 254
     55a:	3f 4f       	sbci	r19, 0xFF	; 255
     55c:	17 c0       	rjmp	.+46     	; 0x58c <__stack+0x12d>
     55e:	ca 01       	movw	r24, r20
     560:	81 70       	andi	r24, 0x01	; 1
     562:	90 70       	andi	r25, 0x00	; 0
     564:	89 2b       	or	r24, r25
     566:	61 f0       	breq	.+24     	; 0x580 <__stack+0x121>
     568:	16 95       	lsr	r17
     56a:	07 95       	ror	r16
     56c:	f7 94       	ror	r15
     56e:	e7 94       	ror	r14
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	a0 e0       	ldi	r26, 0x00	; 0
     576:	b0 e8       	ldi	r27, 0x80	; 128
     578:	e8 2a       	or	r14, r24
     57a:	f9 2a       	or	r15, r25
     57c:	0a 2b       	or	r16, r26
     57e:	1b 2b       	or	r17, r27
     580:	76 95       	lsr	r23
     582:	67 95       	ror	r22
     584:	57 95       	ror	r21
     586:	47 95       	ror	r20
     588:	2f 5f       	subi	r18, 0xFF	; 255
     58a:	3f 4f       	sbci	r19, 0xFF	; 255
     58c:	77 fd       	sbrc	r23, 7
     58e:	e7 cf       	rjmp	.-50     	; 0x55e <__stack+0xff>
     590:	0c c0       	rjmp	.+24     	; 0x5aa <__stack+0x14b>
     592:	44 0f       	add	r20, r20
     594:	55 1f       	adc	r21, r21
     596:	66 1f       	adc	r22, r22
     598:	77 1f       	adc	r23, r23
     59a:	17 fd       	sbrc	r17, 7
     59c:	41 60       	ori	r20, 0x01	; 1
     59e:	ee 0c       	add	r14, r14
     5a0:	ff 1c       	adc	r15, r15
     5a2:	00 1f       	adc	r16, r16
     5a4:	11 1f       	adc	r17, r17
     5a6:	21 50       	subi	r18, 0x01	; 1
     5a8:	30 40       	sbci	r19, 0x00	; 0
     5aa:	40 30       	cpi	r20, 0x00	; 0
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	59 07       	cpc	r21, r25
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	69 07       	cpc	r22, r25
     5b4:	90 e4       	ldi	r25, 0x40	; 64
     5b6:	79 07       	cpc	r23, r25
     5b8:	60 f3       	brcs	.-40     	; 0x592 <__stack+0x133>
     5ba:	2b 8f       	std	Y+27, r18	; 0x1b
     5bc:	3c 8f       	std	Y+28, r19	; 0x1c
     5be:	db 01       	movw	r26, r22
     5c0:	ca 01       	movw	r24, r20
     5c2:	8f 77       	andi	r24, 0x7F	; 127
     5c4:	90 70       	andi	r25, 0x00	; 0
     5c6:	a0 70       	andi	r26, 0x00	; 0
     5c8:	b0 70       	andi	r27, 0x00	; 0
     5ca:	80 34       	cpi	r24, 0x40	; 64
     5cc:	91 05       	cpc	r25, r1
     5ce:	a1 05       	cpc	r26, r1
     5d0:	b1 05       	cpc	r27, r1
     5d2:	61 f4       	brne	.+24     	; 0x5ec <__stack+0x18d>
     5d4:	47 fd       	sbrc	r20, 7
     5d6:	0a c0       	rjmp	.+20     	; 0x5ec <__stack+0x18d>
     5d8:	e1 14       	cp	r14, r1
     5da:	f1 04       	cpc	r15, r1
     5dc:	01 05       	cpc	r16, r1
     5de:	11 05       	cpc	r17, r1
     5e0:	29 f0       	breq	.+10     	; 0x5ec <__stack+0x18d>
     5e2:	40 5c       	subi	r20, 0xC0	; 192
     5e4:	5f 4f       	sbci	r21, 0xFF	; 255
     5e6:	6f 4f       	sbci	r22, 0xFF	; 255
     5e8:	7f 4f       	sbci	r23, 0xFF	; 255
     5ea:	40 78       	andi	r20, 0x80	; 128
     5ec:	1a 8e       	std	Y+26, r1	; 0x1a
     5ee:	fe 17       	cp	r31, r30
     5f0:	11 f0       	breq	.+4      	; 0x5f6 <__stack+0x197>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	8a 8f       	std	Y+26, r24	; 0x1a
     5f6:	4d 8f       	std	Y+29, r20	; 0x1d
     5f8:	5e 8f       	std	Y+30, r21	; 0x1e
     5fa:	6f 8f       	std	Y+31, r22	; 0x1f
     5fc:	78 a3       	std	Y+32, r23	; 0x20
     5fe:	83 e0       	ldi	r24, 0x03	; 3
     600:	89 8f       	std	Y+25, r24	; 0x19
     602:	ce 01       	movw	r24, r28
     604:	49 96       	adiw	r24, 0x19	; 25
     606:	d5 d0       	rcall	.+426    	; 0x7b2 <__pack_f>
     608:	a0 96       	adiw	r28, 0x20	; 32
     60a:	e2 e1       	ldi	r30, 0x12	; 18
     60c:	46 c7       	rjmp	.+3724   	; 0x149a <__epilogue_restores__>

0000060e <__gtsf2>:
     60e:	a8 e1       	ldi	r26, 0x18	; 24
     610:	b0 e0       	ldi	r27, 0x00	; 0
     612:	ec e0       	ldi	r30, 0x0C	; 12
     614:	f3 e0       	ldi	r31, 0x03	; 3
     616:	31 c7       	rjmp	.+3682   	; 0x147a <__prologue_saves__+0x18>
     618:	69 83       	std	Y+1, r22	; 0x01
     61a:	7a 83       	std	Y+2, r23	; 0x02
     61c:	8b 83       	std	Y+3, r24	; 0x03
     61e:	9c 83       	std	Y+4, r25	; 0x04
     620:	2d 83       	std	Y+5, r18	; 0x05
     622:	3e 83       	std	Y+6, r19	; 0x06
     624:	4f 83       	std	Y+7, r20	; 0x07
     626:	58 87       	std	Y+8, r21	; 0x08
     628:	89 e0       	ldi	r24, 0x09	; 9
     62a:	e8 2e       	mov	r14, r24
     62c:	f1 2c       	mov	r15, r1
     62e:	ec 0e       	add	r14, r28
     630:	fd 1e       	adc	r15, r29
     632:	ce 01       	movw	r24, r28
     634:	01 96       	adiw	r24, 0x01	; 1
     636:	b7 01       	movw	r22, r14
     638:	91 d1       	rcall	.+802    	; 0x95c <__unpack_f>
     63a:	8e 01       	movw	r16, r28
     63c:	0f 5e       	subi	r16, 0xEF	; 239
     63e:	1f 4f       	sbci	r17, 0xFF	; 255
     640:	ce 01       	movw	r24, r28
     642:	05 96       	adiw	r24, 0x05	; 5
     644:	b8 01       	movw	r22, r16
     646:	8a d1       	rcall	.+788    	; 0x95c <__unpack_f>
     648:	89 85       	ldd	r24, Y+9	; 0x09
     64a:	82 30       	cpi	r24, 0x02	; 2
     64c:	38 f0       	brcs	.+14     	; 0x65c <__gtsf2+0x4e>
     64e:	89 89       	ldd	r24, Y+17	; 0x11
     650:	82 30       	cpi	r24, 0x02	; 2
     652:	20 f0       	brcs	.+8      	; 0x65c <__gtsf2+0x4e>
     654:	c7 01       	movw	r24, r14
     656:	b8 01       	movw	r22, r16
     658:	f9 d1       	rcall	.+1010   	; 0xa4c <__fpcmp_parts_f>
     65a:	01 c0       	rjmp	.+2      	; 0x65e <__gtsf2+0x50>
     65c:	8f ef       	ldi	r24, 0xFF	; 255
     65e:	68 96       	adiw	r28, 0x18	; 24
     660:	e6 e0       	ldi	r30, 0x06	; 6
     662:	27 c7       	rjmp	.+3662   	; 0x14b2 <__epilogue_restores__+0x18>

00000664 <__gesf2>:
     664:	a8 e1       	ldi	r26, 0x18	; 24
     666:	b0 e0       	ldi	r27, 0x00	; 0
     668:	e7 e3       	ldi	r30, 0x37	; 55
     66a:	f3 e0       	ldi	r31, 0x03	; 3
     66c:	06 c7       	rjmp	.+3596   	; 0x147a <__prologue_saves__+0x18>
     66e:	69 83       	std	Y+1, r22	; 0x01
     670:	7a 83       	std	Y+2, r23	; 0x02
     672:	8b 83       	std	Y+3, r24	; 0x03
     674:	9c 83       	std	Y+4, r25	; 0x04
     676:	2d 83       	std	Y+5, r18	; 0x05
     678:	3e 83       	std	Y+6, r19	; 0x06
     67a:	4f 83       	std	Y+7, r20	; 0x07
     67c:	58 87       	std	Y+8, r21	; 0x08
     67e:	89 e0       	ldi	r24, 0x09	; 9
     680:	e8 2e       	mov	r14, r24
     682:	f1 2c       	mov	r15, r1
     684:	ec 0e       	add	r14, r28
     686:	fd 1e       	adc	r15, r29
     688:	ce 01       	movw	r24, r28
     68a:	01 96       	adiw	r24, 0x01	; 1
     68c:	b7 01       	movw	r22, r14
     68e:	66 d1       	rcall	.+716    	; 0x95c <__unpack_f>
     690:	8e 01       	movw	r16, r28
     692:	0f 5e       	subi	r16, 0xEF	; 239
     694:	1f 4f       	sbci	r17, 0xFF	; 255
     696:	ce 01       	movw	r24, r28
     698:	05 96       	adiw	r24, 0x05	; 5
     69a:	b8 01       	movw	r22, r16
     69c:	5f d1       	rcall	.+702    	; 0x95c <__unpack_f>
     69e:	89 85       	ldd	r24, Y+9	; 0x09
     6a0:	82 30       	cpi	r24, 0x02	; 2
     6a2:	38 f0       	brcs	.+14     	; 0x6b2 <__gesf2+0x4e>
     6a4:	89 89       	ldd	r24, Y+17	; 0x11
     6a6:	82 30       	cpi	r24, 0x02	; 2
     6a8:	20 f0       	brcs	.+8      	; 0x6b2 <__gesf2+0x4e>
     6aa:	c7 01       	movw	r24, r14
     6ac:	b8 01       	movw	r22, r16
     6ae:	ce d1       	rcall	.+924    	; 0xa4c <__fpcmp_parts_f>
     6b0:	01 c0       	rjmp	.+2      	; 0x6b4 <__gesf2+0x50>
     6b2:	8f ef       	ldi	r24, 0xFF	; 255
     6b4:	68 96       	adiw	r28, 0x18	; 24
     6b6:	e6 e0       	ldi	r30, 0x06	; 6
     6b8:	fc c6       	rjmp	.+3576   	; 0x14b2 <__epilogue_restores__+0x18>

000006ba <__ltsf2>:
     6ba:	a8 e1       	ldi	r26, 0x18	; 24
     6bc:	b0 e0       	ldi	r27, 0x00	; 0
     6be:	e2 e6       	ldi	r30, 0x62	; 98
     6c0:	f3 e0       	ldi	r31, 0x03	; 3
     6c2:	db c6       	rjmp	.+3510   	; 0x147a <__prologue_saves__+0x18>
     6c4:	69 83       	std	Y+1, r22	; 0x01
     6c6:	7a 83       	std	Y+2, r23	; 0x02
     6c8:	8b 83       	std	Y+3, r24	; 0x03
     6ca:	9c 83       	std	Y+4, r25	; 0x04
     6cc:	2d 83       	std	Y+5, r18	; 0x05
     6ce:	3e 83       	std	Y+6, r19	; 0x06
     6d0:	4f 83       	std	Y+7, r20	; 0x07
     6d2:	58 87       	std	Y+8, r21	; 0x08
     6d4:	89 e0       	ldi	r24, 0x09	; 9
     6d6:	e8 2e       	mov	r14, r24
     6d8:	f1 2c       	mov	r15, r1
     6da:	ec 0e       	add	r14, r28
     6dc:	fd 1e       	adc	r15, r29
     6de:	ce 01       	movw	r24, r28
     6e0:	01 96       	adiw	r24, 0x01	; 1
     6e2:	b7 01       	movw	r22, r14
     6e4:	3b d1       	rcall	.+630    	; 0x95c <__unpack_f>
     6e6:	8e 01       	movw	r16, r28
     6e8:	0f 5e       	subi	r16, 0xEF	; 239
     6ea:	1f 4f       	sbci	r17, 0xFF	; 255
     6ec:	ce 01       	movw	r24, r28
     6ee:	05 96       	adiw	r24, 0x05	; 5
     6f0:	b8 01       	movw	r22, r16
     6f2:	34 d1       	rcall	.+616    	; 0x95c <__unpack_f>
     6f4:	89 85       	ldd	r24, Y+9	; 0x09
     6f6:	82 30       	cpi	r24, 0x02	; 2
     6f8:	38 f0       	brcs	.+14     	; 0x708 <__ltsf2+0x4e>
     6fa:	89 89       	ldd	r24, Y+17	; 0x11
     6fc:	82 30       	cpi	r24, 0x02	; 2
     6fe:	20 f0       	brcs	.+8      	; 0x708 <__ltsf2+0x4e>
     700:	c7 01       	movw	r24, r14
     702:	b8 01       	movw	r22, r16
     704:	a3 d1       	rcall	.+838    	; 0xa4c <__fpcmp_parts_f>
     706:	01 c0       	rjmp	.+2      	; 0x70a <__ltsf2+0x50>
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	68 96       	adiw	r28, 0x18	; 24
     70c:	e6 e0       	ldi	r30, 0x06	; 6
     70e:	d1 c6       	rjmp	.+3490   	; 0x14b2 <__epilogue_restores__+0x18>

00000710 <__fixsfsi>:
     710:	ac e0       	ldi	r26, 0x0C	; 12
     712:	b0 e0       	ldi	r27, 0x00	; 0
     714:	ed e8       	ldi	r30, 0x8D	; 141
     716:	f3 e0       	ldi	r31, 0x03	; 3
     718:	b4 c6       	rjmp	.+3432   	; 0x1482 <__prologue_saves__+0x20>
     71a:	69 83       	std	Y+1, r22	; 0x01
     71c:	7a 83       	std	Y+2, r23	; 0x02
     71e:	8b 83       	std	Y+3, r24	; 0x03
     720:	9c 83       	std	Y+4, r25	; 0x04
     722:	ce 01       	movw	r24, r28
     724:	01 96       	adiw	r24, 0x01	; 1
     726:	be 01       	movw	r22, r28
     728:	6b 5f       	subi	r22, 0xFB	; 251
     72a:	7f 4f       	sbci	r23, 0xFF	; 255
     72c:	17 d1       	rcall	.+558    	; 0x95c <__unpack_f>
     72e:	8d 81       	ldd	r24, Y+5	; 0x05
     730:	82 30       	cpi	r24, 0x02	; 2
     732:	61 f1       	breq	.+88     	; 0x78c <__fixsfsi+0x7c>
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	50 f1       	brcs	.+84     	; 0x78c <__fixsfsi+0x7c>
     738:	84 30       	cpi	r24, 0x04	; 4
     73a:	21 f4       	brne	.+8      	; 0x744 <__fixsfsi+0x34>
     73c:	8e 81       	ldd	r24, Y+6	; 0x06
     73e:	88 23       	and	r24, r24
     740:	51 f1       	breq	.+84     	; 0x796 <__fixsfsi+0x86>
     742:	2e c0       	rjmp	.+92     	; 0x7a0 <__fixsfsi+0x90>
     744:	2f 81       	ldd	r18, Y+7	; 0x07
     746:	38 85       	ldd	r19, Y+8	; 0x08
     748:	37 fd       	sbrc	r19, 7
     74a:	20 c0       	rjmp	.+64     	; 0x78c <__fixsfsi+0x7c>
     74c:	6e 81       	ldd	r22, Y+6	; 0x06
     74e:	2f 31       	cpi	r18, 0x1F	; 31
     750:	31 05       	cpc	r19, r1
     752:	1c f0       	brlt	.+6      	; 0x75a <__fixsfsi+0x4a>
     754:	66 23       	and	r22, r22
     756:	f9 f0       	breq	.+62     	; 0x796 <__fixsfsi+0x86>
     758:	23 c0       	rjmp	.+70     	; 0x7a0 <__fixsfsi+0x90>
     75a:	8e e1       	ldi	r24, 0x1E	; 30
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	82 1b       	sub	r24, r18
     760:	93 0b       	sbc	r25, r19
     762:	29 85       	ldd	r18, Y+9	; 0x09
     764:	3a 85       	ldd	r19, Y+10	; 0x0a
     766:	4b 85       	ldd	r20, Y+11	; 0x0b
     768:	5c 85       	ldd	r21, Y+12	; 0x0c
     76a:	04 c0       	rjmp	.+8      	; 0x774 <__fixsfsi+0x64>
     76c:	56 95       	lsr	r21
     76e:	47 95       	ror	r20
     770:	37 95       	ror	r19
     772:	27 95       	ror	r18
     774:	8a 95       	dec	r24
     776:	d2 f7       	brpl	.-12     	; 0x76c <__fixsfsi+0x5c>
     778:	66 23       	and	r22, r22
     77a:	b1 f0       	breq	.+44     	; 0x7a8 <__fixsfsi+0x98>
     77c:	50 95       	com	r21
     77e:	40 95       	com	r20
     780:	30 95       	com	r19
     782:	21 95       	neg	r18
     784:	3f 4f       	sbci	r19, 0xFF	; 255
     786:	4f 4f       	sbci	r20, 0xFF	; 255
     788:	5f 4f       	sbci	r21, 0xFF	; 255
     78a:	0e c0       	rjmp	.+28     	; 0x7a8 <__fixsfsi+0x98>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e0       	ldi	r20, 0x00	; 0
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	09 c0       	rjmp	.+18     	; 0x7a8 <__fixsfsi+0x98>
     796:	2f ef       	ldi	r18, 0xFF	; 255
     798:	3f ef       	ldi	r19, 0xFF	; 255
     79a:	4f ef       	ldi	r20, 0xFF	; 255
     79c:	5f e7       	ldi	r21, 0x7F	; 127
     79e:	04 c0       	rjmp	.+8      	; 0x7a8 <__fixsfsi+0x98>
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	40 e0       	ldi	r20, 0x00	; 0
     7a6:	50 e8       	ldi	r21, 0x80	; 128
     7a8:	b9 01       	movw	r22, r18
     7aa:	ca 01       	movw	r24, r20
     7ac:	2c 96       	adiw	r28, 0x0c	; 12
     7ae:	e2 e0       	ldi	r30, 0x02	; 2
     7b0:	84 c6       	rjmp	.+3336   	; 0x14ba <__epilogue_restores__+0x20>

000007b2 <__pack_f>:
     7b2:	df 92       	push	r13
     7b4:	ef 92       	push	r14
     7b6:	ff 92       	push	r15
     7b8:	0f 93       	push	r16
     7ba:	1f 93       	push	r17
     7bc:	fc 01       	movw	r30, r24
     7be:	e4 80       	ldd	r14, Z+4	; 0x04
     7c0:	f5 80       	ldd	r15, Z+5	; 0x05
     7c2:	06 81       	ldd	r16, Z+6	; 0x06
     7c4:	17 81       	ldd	r17, Z+7	; 0x07
     7c6:	d1 80       	ldd	r13, Z+1	; 0x01
     7c8:	80 81       	ld	r24, Z
     7ca:	82 30       	cpi	r24, 0x02	; 2
     7cc:	48 f4       	brcc	.+18     	; 0x7e0 <__pack_f+0x2e>
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	a0 e1       	ldi	r26, 0x10	; 16
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	e8 2a       	or	r14, r24
     7d8:	f9 2a       	or	r15, r25
     7da:	0a 2b       	or	r16, r26
     7dc:	1b 2b       	or	r17, r27
     7de:	a5 c0       	rjmp	.+330    	; 0x92a <__pack_f+0x178>
     7e0:	84 30       	cpi	r24, 0x04	; 4
     7e2:	09 f4       	brne	.+2      	; 0x7e6 <__pack_f+0x34>
     7e4:	9f c0       	rjmp	.+318    	; 0x924 <__pack_f+0x172>
     7e6:	82 30       	cpi	r24, 0x02	; 2
     7e8:	21 f4       	brne	.+8      	; 0x7f2 <__pack_f+0x40>
     7ea:	ee 24       	eor	r14, r14
     7ec:	ff 24       	eor	r15, r15
     7ee:	87 01       	movw	r16, r14
     7f0:	05 c0       	rjmp	.+10     	; 0x7fc <__pack_f+0x4a>
     7f2:	e1 14       	cp	r14, r1
     7f4:	f1 04       	cpc	r15, r1
     7f6:	01 05       	cpc	r16, r1
     7f8:	11 05       	cpc	r17, r1
     7fa:	19 f4       	brne	.+6      	; 0x802 <__pack_f+0x50>
     7fc:	e0 e0       	ldi	r30, 0x00	; 0
     7fe:	f0 e0       	ldi	r31, 0x00	; 0
     800:	96 c0       	rjmp	.+300    	; 0x92e <__pack_f+0x17c>
     802:	62 81       	ldd	r22, Z+2	; 0x02
     804:	73 81       	ldd	r23, Z+3	; 0x03
     806:	9f ef       	ldi	r25, 0xFF	; 255
     808:	62 38       	cpi	r22, 0x82	; 130
     80a:	79 07       	cpc	r23, r25
     80c:	0c f0       	brlt	.+2      	; 0x810 <__pack_f+0x5e>
     80e:	5b c0       	rjmp	.+182    	; 0x8c6 <__pack_f+0x114>
     810:	22 e8       	ldi	r18, 0x82	; 130
     812:	3f ef       	ldi	r19, 0xFF	; 255
     814:	26 1b       	sub	r18, r22
     816:	37 0b       	sbc	r19, r23
     818:	2a 31       	cpi	r18, 0x1A	; 26
     81a:	31 05       	cpc	r19, r1
     81c:	2c f0       	brlt	.+10     	; 0x828 <__pack_f+0x76>
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	40 e0       	ldi	r20, 0x00	; 0
     824:	50 e0       	ldi	r21, 0x00	; 0
     826:	2a c0       	rjmp	.+84     	; 0x87c <__pack_f+0xca>
     828:	b8 01       	movw	r22, r16
     82a:	a7 01       	movw	r20, r14
     82c:	02 2e       	mov	r0, r18
     82e:	04 c0       	rjmp	.+8      	; 0x838 <__pack_f+0x86>
     830:	76 95       	lsr	r23
     832:	67 95       	ror	r22
     834:	57 95       	ror	r21
     836:	47 95       	ror	r20
     838:	0a 94       	dec	r0
     83a:	d2 f7       	brpl	.-12     	; 0x830 <__pack_f+0x7e>
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	a0 e0       	ldi	r26, 0x00	; 0
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	04 c0       	rjmp	.+8      	; 0x84e <__pack_f+0x9c>
     846:	88 0f       	add	r24, r24
     848:	99 1f       	adc	r25, r25
     84a:	aa 1f       	adc	r26, r26
     84c:	bb 1f       	adc	r27, r27
     84e:	2a 95       	dec	r18
     850:	d2 f7       	brpl	.-12     	; 0x846 <__pack_f+0x94>
     852:	01 97       	sbiw	r24, 0x01	; 1
     854:	a1 09       	sbc	r26, r1
     856:	b1 09       	sbc	r27, r1
     858:	8e 21       	and	r24, r14
     85a:	9f 21       	and	r25, r15
     85c:	a0 23       	and	r26, r16
     85e:	b1 23       	and	r27, r17
     860:	00 97       	sbiw	r24, 0x00	; 0
     862:	a1 05       	cpc	r26, r1
     864:	b1 05       	cpc	r27, r1
     866:	21 f0       	breq	.+8      	; 0x870 <__pack_f+0xbe>
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	a0 e0       	ldi	r26, 0x00	; 0
     86e:	b0 e0       	ldi	r27, 0x00	; 0
     870:	9a 01       	movw	r18, r20
     872:	ab 01       	movw	r20, r22
     874:	28 2b       	or	r18, r24
     876:	39 2b       	or	r19, r25
     878:	4a 2b       	or	r20, r26
     87a:	5b 2b       	or	r21, r27
     87c:	da 01       	movw	r26, r20
     87e:	c9 01       	movw	r24, r18
     880:	8f 77       	andi	r24, 0x7F	; 127
     882:	90 70       	andi	r25, 0x00	; 0
     884:	a0 70       	andi	r26, 0x00	; 0
     886:	b0 70       	andi	r27, 0x00	; 0
     888:	80 34       	cpi	r24, 0x40	; 64
     88a:	91 05       	cpc	r25, r1
     88c:	a1 05       	cpc	r26, r1
     88e:	b1 05       	cpc	r27, r1
     890:	39 f4       	brne	.+14     	; 0x8a0 <__pack_f+0xee>
     892:	27 ff       	sbrs	r18, 7
     894:	09 c0       	rjmp	.+18     	; 0x8a8 <__pack_f+0xf6>
     896:	20 5c       	subi	r18, 0xC0	; 192
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	4f 4f       	sbci	r20, 0xFF	; 255
     89c:	5f 4f       	sbci	r21, 0xFF	; 255
     89e:	04 c0       	rjmp	.+8      	; 0x8a8 <__pack_f+0xf6>
     8a0:	21 5c       	subi	r18, 0xC1	; 193
     8a2:	3f 4f       	sbci	r19, 0xFF	; 255
     8a4:	4f 4f       	sbci	r20, 0xFF	; 255
     8a6:	5f 4f       	sbci	r21, 0xFF	; 255
     8a8:	e0 e0       	ldi	r30, 0x00	; 0
     8aa:	f0 e0       	ldi	r31, 0x00	; 0
     8ac:	20 30       	cpi	r18, 0x00	; 0
     8ae:	a0 e0       	ldi	r26, 0x00	; 0
     8b0:	3a 07       	cpc	r19, r26
     8b2:	a0 e0       	ldi	r26, 0x00	; 0
     8b4:	4a 07       	cpc	r20, r26
     8b6:	a0 e4       	ldi	r26, 0x40	; 64
     8b8:	5a 07       	cpc	r21, r26
     8ba:	10 f0       	brcs	.+4      	; 0x8c0 <__pack_f+0x10e>
     8bc:	e1 e0       	ldi	r30, 0x01	; 1
     8be:	f0 e0       	ldi	r31, 0x00	; 0
     8c0:	79 01       	movw	r14, r18
     8c2:	8a 01       	movw	r16, r20
     8c4:	27 c0       	rjmp	.+78     	; 0x914 <__pack_f+0x162>
     8c6:	60 38       	cpi	r22, 0x80	; 128
     8c8:	71 05       	cpc	r23, r1
     8ca:	64 f5       	brge	.+88     	; 0x924 <__pack_f+0x172>
     8cc:	fb 01       	movw	r30, r22
     8ce:	e1 58       	subi	r30, 0x81	; 129
     8d0:	ff 4f       	sbci	r31, 0xFF	; 255
     8d2:	d8 01       	movw	r26, r16
     8d4:	c7 01       	movw	r24, r14
     8d6:	8f 77       	andi	r24, 0x7F	; 127
     8d8:	90 70       	andi	r25, 0x00	; 0
     8da:	a0 70       	andi	r26, 0x00	; 0
     8dc:	b0 70       	andi	r27, 0x00	; 0
     8de:	80 34       	cpi	r24, 0x40	; 64
     8e0:	91 05       	cpc	r25, r1
     8e2:	a1 05       	cpc	r26, r1
     8e4:	b1 05       	cpc	r27, r1
     8e6:	39 f4       	brne	.+14     	; 0x8f6 <__pack_f+0x144>
     8e8:	e7 fe       	sbrs	r14, 7
     8ea:	0d c0       	rjmp	.+26     	; 0x906 <__pack_f+0x154>
     8ec:	80 e4       	ldi	r24, 0x40	; 64
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a0 e0       	ldi	r26, 0x00	; 0
     8f2:	b0 e0       	ldi	r27, 0x00	; 0
     8f4:	04 c0       	rjmp	.+8      	; 0x8fe <__pack_f+0x14c>
     8f6:	8f e3       	ldi	r24, 0x3F	; 63
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e8 0e       	add	r14, r24
     900:	f9 1e       	adc	r15, r25
     902:	0a 1f       	adc	r16, r26
     904:	1b 1f       	adc	r17, r27
     906:	17 ff       	sbrs	r17, 7
     908:	05 c0       	rjmp	.+10     	; 0x914 <__pack_f+0x162>
     90a:	16 95       	lsr	r17
     90c:	07 95       	ror	r16
     90e:	f7 94       	ror	r15
     910:	e7 94       	ror	r14
     912:	31 96       	adiw	r30, 0x01	; 1
     914:	87 e0       	ldi	r24, 0x07	; 7
     916:	16 95       	lsr	r17
     918:	07 95       	ror	r16
     91a:	f7 94       	ror	r15
     91c:	e7 94       	ror	r14
     91e:	8a 95       	dec	r24
     920:	d1 f7       	brne	.-12     	; 0x916 <__pack_f+0x164>
     922:	05 c0       	rjmp	.+10     	; 0x92e <__pack_f+0x17c>
     924:	ee 24       	eor	r14, r14
     926:	ff 24       	eor	r15, r15
     928:	87 01       	movw	r16, r14
     92a:	ef ef       	ldi	r30, 0xFF	; 255
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	6e 2f       	mov	r22, r30
     930:	67 95       	ror	r22
     932:	66 27       	eor	r22, r22
     934:	67 95       	ror	r22
     936:	90 2f       	mov	r25, r16
     938:	9f 77       	andi	r25, 0x7F	; 127
     93a:	d7 94       	ror	r13
     93c:	dd 24       	eor	r13, r13
     93e:	d7 94       	ror	r13
     940:	8e 2f       	mov	r24, r30
     942:	86 95       	lsr	r24
     944:	49 2f       	mov	r20, r25
     946:	46 2b       	or	r20, r22
     948:	58 2f       	mov	r21, r24
     94a:	5d 29       	or	r21, r13
     94c:	b7 01       	movw	r22, r14
     94e:	ca 01       	movw	r24, r20
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	ff 90       	pop	r15
     956:	ef 90       	pop	r14
     958:	df 90       	pop	r13
     95a:	08 95       	ret

0000095c <__unpack_f>:
     95c:	fc 01       	movw	r30, r24
     95e:	db 01       	movw	r26, r22
     960:	40 81       	ld	r20, Z
     962:	51 81       	ldd	r21, Z+1	; 0x01
     964:	22 81       	ldd	r18, Z+2	; 0x02
     966:	62 2f       	mov	r22, r18
     968:	6f 77       	andi	r22, 0x7F	; 127
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	22 1f       	adc	r18, r18
     96e:	22 27       	eor	r18, r18
     970:	22 1f       	adc	r18, r18
     972:	93 81       	ldd	r25, Z+3	; 0x03
     974:	89 2f       	mov	r24, r25
     976:	88 0f       	add	r24, r24
     978:	82 2b       	or	r24, r18
     97a:	28 2f       	mov	r18, r24
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	99 1f       	adc	r25, r25
     980:	99 27       	eor	r25, r25
     982:	99 1f       	adc	r25, r25
     984:	11 96       	adiw	r26, 0x01	; 1
     986:	9c 93       	st	X, r25
     988:	11 97       	sbiw	r26, 0x01	; 1
     98a:	21 15       	cp	r18, r1
     98c:	31 05       	cpc	r19, r1
     98e:	a9 f5       	brne	.+106    	; 0x9fa <__unpack_f+0x9e>
     990:	41 15       	cp	r20, r1
     992:	51 05       	cpc	r21, r1
     994:	61 05       	cpc	r22, r1
     996:	71 05       	cpc	r23, r1
     998:	11 f4       	brne	.+4      	; 0x99e <__unpack_f+0x42>
     99a:	82 e0       	ldi	r24, 0x02	; 2
     99c:	37 c0       	rjmp	.+110    	; 0xa0c <__unpack_f+0xb0>
     99e:	82 e8       	ldi	r24, 0x82	; 130
     9a0:	9f ef       	ldi	r25, 0xFF	; 255
     9a2:	13 96       	adiw	r26, 0x03	; 3
     9a4:	9c 93       	st	X, r25
     9a6:	8e 93       	st	-X, r24
     9a8:	12 97       	sbiw	r26, 0x02	; 2
     9aa:	9a 01       	movw	r18, r20
     9ac:	ab 01       	movw	r20, r22
     9ae:	67 e0       	ldi	r22, 0x07	; 7
     9b0:	22 0f       	add	r18, r18
     9b2:	33 1f       	adc	r19, r19
     9b4:	44 1f       	adc	r20, r20
     9b6:	55 1f       	adc	r21, r21
     9b8:	6a 95       	dec	r22
     9ba:	d1 f7       	brne	.-12     	; 0x9b0 <__unpack_f+0x54>
     9bc:	83 e0       	ldi	r24, 0x03	; 3
     9be:	8c 93       	st	X, r24
     9c0:	0d c0       	rjmp	.+26     	; 0x9dc <__unpack_f+0x80>
     9c2:	22 0f       	add	r18, r18
     9c4:	33 1f       	adc	r19, r19
     9c6:	44 1f       	adc	r20, r20
     9c8:	55 1f       	adc	r21, r21
     9ca:	12 96       	adiw	r26, 0x02	; 2
     9cc:	8d 91       	ld	r24, X+
     9ce:	9c 91       	ld	r25, X
     9d0:	13 97       	sbiw	r26, 0x03	; 3
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	13 96       	adiw	r26, 0x03	; 3
     9d6:	9c 93       	st	X, r25
     9d8:	8e 93       	st	-X, r24
     9da:	12 97       	sbiw	r26, 0x02	; 2
     9dc:	20 30       	cpi	r18, 0x00	; 0
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	38 07       	cpc	r19, r24
     9e2:	80 e0       	ldi	r24, 0x00	; 0
     9e4:	48 07       	cpc	r20, r24
     9e6:	80 e4       	ldi	r24, 0x40	; 64
     9e8:	58 07       	cpc	r21, r24
     9ea:	58 f3       	brcs	.-42     	; 0x9c2 <__unpack_f+0x66>
     9ec:	14 96       	adiw	r26, 0x04	; 4
     9ee:	2d 93       	st	X+, r18
     9f0:	3d 93       	st	X+, r19
     9f2:	4d 93       	st	X+, r20
     9f4:	5c 93       	st	X, r21
     9f6:	17 97       	sbiw	r26, 0x07	; 7
     9f8:	08 95       	ret
     9fa:	2f 3f       	cpi	r18, 0xFF	; 255
     9fc:	31 05       	cpc	r19, r1
     9fe:	79 f4       	brne	.+30     	; 0xa1e <__unpack_f+0xc2>
     a00:	41 15       	cp	r20, r1
     a02:	51 05       	cpc	r21, r1
     a04:	61 05       	cpc	r22, r1
     a06:	71 05       	cpc	r23, r1
     a08:	19 f4       	brne	.+6      	; 0xa10 <__unpack_f+0xb4>
     a0a:	84 e0       	ldi	r24, 0x04	; 4
     a0c:	8c 93       	st	X, r24
     a0e:	08 95       	ret
     a10:	64 ff       	sbrs	r22, 4
     a12:	03 c0       	rjmp	.+6      	; 0xa1a <__unpack_f+0xbe>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	8c 93       	st	X, r24
     a18:	12 c0       	rjmp	.+36     	; 0xa3e <__unpack_f+0xe2>
     a1a:	1c 92       	st	X, r1
     a1c:	10 c0       	rjmp	.+32     	; 0xa3e <__unpack_f+0xe2>
     a1e:	2f 57       	subi	r18, 0x7F	; 127
     a20:	30 40       	sbci	r19, 0x00	; 0
     a22:	13 96       	adiw	r26, 0x03	; 3
     a24:	3c 93       	st	X, r19
     a26:	2e 93       	st	-X, r18
     a28:	12 97       	sbiw	r26, 0x02	; 2
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	8c 93       	st	X, r24
     a2e:	87 e0       	ldi	r24, 0x07	; 7
     a30:	44 0f       	add	r20, r20
     a32:	55 1f       	adc	r21, r21
     a34:	66 1f       	adc	r22, r22
     a36:	77 1f       	adc	r23, r23
     a38:	8a 95       	dec	r24
     a3a:	d1 f7       	brne	.-12     	; 0xa30 <__unpack_f+0xd4>
     a3c:	70 64       	ori	r23, 0x40	; 64
     a3e:	14 96       	adiw	r26, 0x04	; 4
     a40:	4d 93       	st	X+, r20
     a42:	5d 93       	st	X+, r21
     a44:	6d 93       	st	X+, r22
     a46:	7c 93       	st	X, r23
     a48:	17 97       	sbiw	r26, 0x07	; 7
     a4a:	08 95       	ret

00000a4c <__fpcmp_parts_f>:
     a4c:	1f 93       	push	r17
     a4e:	dc 01       	movw	r26, r24
     a50:	fb 01       	movw	r30, r22
     a52:	9c 91       	ld	r25, X
     a54:	92 30       	cpi	r25, 0x02	; 2
     a56:	08 f4       	brcc	.+2      	; 0xa5a <__fpcmp_parts_f+0xe>
     a58:	47 c0       	rjmp	.+142    	; 0xae8 <__fpcmp_parts_f+0x9c>
     a5a:	80 81       	ld	r24, Z
     a5c:	82 30       	cpi	r24, 0x02	; 2
     a5e:	08 f4       	brcc	.+2      	; 0xa62 <__fpcmp_parts_f+0x16>
     a60:	43 c0       	rjmp	.+134    	; 0xae8 <__fpcmp_parts_f+0x9c>
     a62:	94 30       	cpi	r25, 0x04	; 4
     a64:	51 f4       	brne	.+20     	; 0xa7a <__fpcmp_parts_f+0x2e>
     a66:	11 96       	adiw	r26, 0x01	; 1
     a68:	1c 91       	ld	r17, X
     a6a:	84 30       	cpi	r24, 0x04	; 4
     a6c:	99 f5       	brne	.+102    	; 0xad4 <__fpcmp_parts_f+0x88>
     a6e:	81 81       	ldd	r24, Z+1	; 0x01
     a70:	68 2f       	mov	r22, r24
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	61 1b       	sub	r22, r17
     a76:	71 09       	sbc	r23, r1
     a78:	3f c0       	rjmp	.+126    	; 0xaf8 <__fpcmp_parts_f+0xac>
     a7a:	84 30       	cpi	r24, 0x04	; 4
     a7c:	21 f0       	breq	.+8      	; 0xa86 <__fpcmp_parts_f+0x3a>
     a7e:	92 30       	cpi	r25, 0x02	; 2
     a80:	31 f4       	brne	.+12     	; 0xa8e <__fpcmp_parts_f+0x42>
     a82:	82 30       	cpi	r24, 0x02	; 2
     a84:	b9 f1       	breq	.+110    	; 0xaf4 <__fpcmp_parts_f+0xa8>
     a86:	81 81       	ldd	r24, Z+1	; 0x01
     a88:	88 23       	and	r24, r24
     a8a:	89 f1       	breq	.+98     	; 0xaee <__fpcmp_parts_f+0xa2>
     a8c:	2d c0       	rjmp	.+90     	; 0xae8 <__fpcmp_parts_f+0x9c>
     a8e:	11 96       	adiw	r26, 0x01	; 1
     a90:	1c 91       	ld	r17, X
     a92:	11 97       	sbiw	r26, 0x01	; 1
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	f1 f0       	breq	.+60     	; 0xad4 <__fpcmp_parts_f+0x88>
     a98:	81 81       	ldd	r24, Z+1	; 0x01
     a9a:	18 17       	cp	r17, r24
     a9c:	d9 f4       	brne	.+54     	; 0xad4 <__fpcmp_parts_f+0x88>
     a9e:	12 96       	adiw	r26, 0x02	; 2
     aa0:	2d 91       	ld	r18, X+
     aa2:	3c 91       	ld	r19, X
     aa4:	13 97       	sbiw	r26, 0x03	; 3
     aa6:	82 81       	ldd	r24, Z+2	; 0x02
     aa8:	93 81       	ldd	r25, Z+3	; 0x03
     aaa:	82 17       	cp	r24, r18
     aac:	93 07       	cpc	r25, r19
     aae:	94 f0       	brlt	.+36     	; 0xad4 <__fpcmp_parts_f+0x88>
     ab0:	28 17       	cp	r18, r24
     ab2:	39 07       	cpc	r19, r25
     ab4:	bc f0       	brlt	.+46     	; 0xae4 <__fpcmp_parts_f+0x98>
     ab6:	14 96       	adiw	r26, 0x04	; 4
     ab8:	8d 91       	ld	r24, X+
     aba:	9d 91       	ld	r25, X+
     abc:	0d 90       	ld	r0, X+
     abe:	bc 91       	ld	r27, X
     ac0:	a0 2d       	mov	r26, r0
     ac2:	24 81       	ldd	r18, Z+4	; 0x04
     ac4:	35 81       	ldd	r19, Z+5	; 0x05
     ac6:	46 81       	ldd	r20, Z+6	; 0x06
     ac8:	57 81       	ldd	r21, Z+7	; 0x07
     aca:	28 17       	cp	r18, r24
     acc:	39 07       	cpc	r19, r25
     ace:	4a 07       	cpc	r20, r26
     ad0:	5b 07       	cpc	r21, r27
     ad2:	18 f4       	brcc	.+6      	; 0xada <__fpcmp_parts_f+0x8e>
     ad4:	11 23       	and	r17, r17
     ad6:	41 f0       	breq	.+16     	; 0xae8 <__fpcmp_parts_f+0x9c>
     ad8:	0a c0       	rjmp	.+20     	; 0xaee <__fpcmp_parts_f+0xa2>
     ada:	82 17       	cp	r24, r18
     adc:	93 07       	cpc	r25, r19
     ade:	a4 07       	cpc	r26, r20
     ae0:	b5 07       	cpc	r27, r21
     ae2:	40 f4       	brcc	.+16     	; 0xaf4 <__fpcmp_parts_f+0xa8>
     ae4:	11 23       	and	r17, r17
     ae6:	19 f0       	breq	.+6      	; 0xaee <__fpcmp_parts_f+0xa2>
     ae8:	61 e0       	ldi	r22, 0x01	; 1
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	05 c0       	rjmp	.+10     	; 0xaf8 <__fpcmp_parts_f+0xac>
     aee:	6f ef       	ldi	r22, 0xFF	; 255
     af0:	7f ef       	ldi	r23, 0xFF	; 255
     af2:	02 c0       	rjmp	.+4      	; 0xaf8 <__fpcmp_parts_f+0xac>
     af4:	60 e0       	ldi	r22, 0x00	; 0
     af6:	70 e0       	ldi	r23, 0x00	; 0
     af8:	cb 01       	movw	r24, r22
     afa:	1f 91       	pop	r17
     afc:	08 95       	ret

00000afe <_Z11Timer1_Initv>:
unsigned char min1 = 0;
unsigned char min2 = 0;
unsigned char hours1 = 0;
unsigned char hours2 = 0;

void Timer1_Init(void)
     afe:	df 93       	push	r29
     b00:	cf 93       	push	r28
     b02:	cd b7       	in	r28, 0x3d	; 61
     b04:	de b7       	in	r29, 0x3e	; 62
{
	TCCR1A = (1<<WGM12) ;        //for use the timer 1 in 16-bit mode
     b06:	ef e4       	ldi	r30, 0x4F	; 79
     b08:	f0 e0       	ldi	r31, 0x00	; 0
     b0a:	88 e0       	ldi	r24, 0x08	; 8
     b0c:	80 83       	st	Z, r24
	TCCR1B = (1<<CS12) | (1<<CS10);             //pre-scaler =1024
     b0e:	ee e4       	ldi	r30, 0x4E	; 78
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	85 e0       	ldi	r24, 0x05	; 5
     b14:	80 83       	st	Z, r24
	OCR1A = 977;                             //compare value to make over flow every 1 second
     b16:	ea e4       	ldi	r30, 0x4A	; 74
     b18:	f0 e0       	ldi	r31, 0x00	; 0
     b1a:	81 ed       	ldi	r24, 0xD1	; 209
     b1c:	93 e0       	ldi	r25, 0x03	; 3
     b1e:	91 83       	std	Z+1, r25	; 0x01
     b20:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE1A);                    //enable capture compare A interrupt
     b22:	a9 e5       	ldi	r26, 0x59	; 89
     b24:	b0 e0       	ldi	r27, 0x00	; 0
     b26:	e9 e5       	ldi	r30, 0x59	; 89
     b28:	f0 e0       	ldi	r31, 0x00	; 0
     b2a:	80 81       	ld	r24, Z
     b2c:	80 61       	ori	r24, 0x10	; 16
     b2e:	8c 93       	st	X, r24
	SREG |= (1<<7);                          //enable global interrupt
     b30:	af e5       	ldi	r26, 0x5F	; 95
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	ef e5       	ldi	r30, 0x5F	; 95
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	80 81       	ld	r24, Z
     b3a:	80 68       	ori	r24, 0x80	; 128
     b3c:	8c 93       	st	X, r24
}
     b3e:	cf 91       	pop	r28
     b40:	df 91       	pop	r29
     b42:	08 95       	ret

00000b44 <_Z9INT0_Initv>:

void INT0_Init(void)
     b44:	df 93       	push	r29
     b46:	cf 93       	push	r28
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
{
	DDRD &= ~(1<<PD2);                       //config PD2 as input
     b4c:	a1 e3       	ldi	r26, 0x31	; 49
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	e1 e3       	ldi	r30, 0x31	; 49
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	80 81       	ld	r24, Z
     b56:	8b 7f       	andi	r24, 0xFB	; 251
     b58:	8c 93       	st	X, r24
	PORTD |= (1<<PD2);                      //internal pull up
     b5a:	a2 e3       	ldi	r26, 0x32	; 50
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e2 e3       	ldi	r30, 0x32	; 50
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	84 60       	ori	r24, 0x04	; 4
     b66:	8c 93       	st	X, r24
	MCUCR |= (1<<ISC01);
     b68:	a5 e5       	ldi	r26, 0x55	; 85
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e5 e5       	ldi	r30, 0x55	; 85
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	82 60       	ori	r24, 0x02	; 2
     b74:	8c 93       	st	X, r24
	MCUCR &= ~(1<<ISC00);                   //The falling edge of INT0 generates an interrupt request.
     b76:	a5 e5       	ldi	r26, 0x55	; 85
     b78:	b0 e0       	ldi	r27, 0x00	; 0
     b7a:	e5 e5       	ldi	r30, 0x55	; 85
     b7c:	f0 e0       	ldi	r31, 0x00	; 0
     b7e:	80 81       	ld	r24, Z
     b80:	8e 7f       	andi	r24, 0xFE	; 254
     b82:	8c 93       	st	X, r24
	GICR |= (1<<INT0);                      //External Interrupt Request 0 Enable
     b84:	ab e5       	ldi	r26, 0x5B	; 91
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	eb e5       	ldi	r30, 0x5B	; 91
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	80 81       	ld	r24, Z
     b8e:	80 64       	ori	r24, 0x40	; 64
     b90:	8c 93       	st	X, r24
	//SREG |= (1<<7);						//this bit is already set by timer 1 initialize
}
     b92:	cf 91       	pop	r28
     b94:	df 91       	pop	r29
     b96:	08 95       	ret

00000b98 <_Z9INT1_Initv>:

void INT1_Init(void)
     b98:	df 93       	push	r29
     b9a:	cf 93       	push	r28
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
{
	DDRD &= ~(1<<PD3);                       //config PD3 as input
     ba0:	a1 e3       	ldi	r26, 0x31	; 49
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e1 e3       	ldi	r30, 0x31	; 49
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	87 7f       	andi	r24, 0xF7	; 247
     bac:	8c 93       	st	X, r24
	MCUCR |= (1<<ISC10) | (1<<ISC11);       //The rising edge of INT1 generates an interrupt request.
     bae:	a5 e5       	ldi	r26, 0x55	; 85
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	e5 e5       	ldi	r30, 0x55	; 85
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 81       	ld	r24, Z
     bb8:	8c 60       	ori	r24, 0x0C	; 12
     bba:	8c 93       	st	X, r24
	GICR |= (1<<INT1);                      //External Interrupt Request 1 Enable
     bbc:	ab e5       	ldi	r26, 0x5B	; 91
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	eb e5       	ldi	r30, 0x5B	; 91
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	80 81       	ld	r24, Z
     bc6:	80 68       	ori	r24, 0x80	; 128
     bc8:	8c 93       	st	X, r24
	//SREG |= (1<<7);						//this bit is already set by timer 1 initialize
}
     bca:	cf 91       	pop	r28
     bcc:	df 91       	pop	r29
     bce:	08 95       	ret

00000bd0 <_Z9INT2_Initv>:

void INT2_Init(void)
     bd0:	df 93       	push	r29
     bd2:	cf 93       	push	r28
     bd4:	cd b7       	in	r28, 0x3d	; 61
     bd6:	de b7       	in	r29, 0x3e	; 62
{
	DDRB &= ~(1<<PB2);                       //config PB2 as input
     bd8:	a7 e3       	ldi	r26, 0x37	; 55
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	e7 e3       	ldi	r30, 0x37	; 55
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	80 81       	ld	r24, Z
     be2:	8b 7f       	andi	r24, 0xFB	; 251
     be4:	8c 93       	st	X, r24
	PORTB |= (1<<PB2);                       //internal pull up
     be6:	a8 e3       	ldi	r26, 0x38	; 56
     be8:	b0 e0       	ldi	r27, 0x00	; 0
     bea:	e8 e3       	ldi	r30, 0x38	; 56
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	80 81       	ld	r24, Z
     bf0:	84 60       	ori	r24, 0x04	; 4
     bf2:	8c 93       	st	X, r24
	GICR |= (1<<INT2);                       //External Interrupt Request 2 Enable
     bf4:	ab e5       	ldi	r26, 0x5B	; 91
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	eb e5       	ldi	r30, 0x5B	; 91
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	80 81       	ld	r24, Z
     bfe:	80 62       	ori	r24, 0x20	; 32
     c00:	8c 93       	st	X, r24
	//SREG |= (1<<7);						//this bit is already set by timer 1 initialize
}
     c02:	cf 91       	pop	r28
     c04:	df 91       	pop	r29
     c06:	08 95       	ret

00000c08 <__vector_6>:

/*****************************************ISR Functions**********************************************************/

ISR(TIMER1_COMPA_vect)
     c08:	1f 92       	push	r1
     c0a:	0f 92       	push	r0
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	0f 92       	push	r0
     c10:	11 24       	eor	r1, r1
     c12:	8f 93       	push	r24
     c14:	ef 93       	push	r30
     c16:	ff 93       	push	r31
     c18:	df 93       	push	r29
     c1a:	cf 93       	push	r28
     c1c:	cd b7       	in	r28, 0x3d	; 61
     c1e:	de b7       	in	r29, 0x3e	; 62
{
	sec1 ++;
     c20:	80 91 68 00 	lds	r24, 0x0068
     c24:	8f 5f       	subi	r24, 0xFF	; 255
     c26:	80 93 68 00 	sts	0x0068, r24
	TCNT1 = 0;
     c2a:	ec e4       	ldi	r30, 0x4C	; 76
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	11 82       	std	Z+1, r1	; 0x01
     c30:	10 82       	st	Z, r1
}
     c32:	cf 91       	pop	r28
     c34:	df 91       	pop	r29
     c36:	ff 91       	pop	r31
     c38:	ef 91       	pop	r30
     c3a:	8f 91       	pop	r24
     c3c:	0f 90       	pop	r0
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	0f 90       	pop	r0
     c42:	1f 90       	pop	r1
     c44:	18 95       	reti

00000c46 <__vector_1>:

ISR(INT0_vect)
     c46:	1f 92       	push	r1
     c48:	0f 92       	push	r0
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	0f 92       	push	r0
     c4e:	11 24       	eor	r1, r1
     c50:	8f 93       	push	r24
     c52:	df 93       	push	r29
     c54:	cf 93       	push	r28
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
{
	sec1=sec2=min1=min2=hours1=hours2=0;                           //reset the stop watch
     c5a:	10 92 6d 00 	sts	0x006D, r1
     c5e:	80 91 6d 00 	lds	r24, 0x006D
     c62:	80 93 6c 00 	sts	0x006C, r24
     c66:	80 91 6c 00 	lds	r24, 0x006C
     c6a:	80 93 6b 00 	sts	0x006B, r24
     c6e:	80 91 6b 00 	lds	r24, 0x006B
     c72:	80 93 6a 00 	sts	0x006A, r24
     c76:	80 91 6a 00 	lds	r24, 0x006A
     c7a:	80 93 69 00 	sts	0x0069, r24
     c7e:	80 91 69 00 	lds	r24, 0x0069
     c82:	80 93 68 00 	sts	0x0068, r24
}
     c86:	cf 91       	pop	r28
     c88:	df 91       	pop	r29
     c8a:	8f 91       	pop	r24
     c8c:	0f 90       	pop	r0
     c8e:	0f be       	out	0x3f, r0	; 63
     c90:	0f 90       	pop	r0
     c92:	1f 90       	pop	r1
     c94:	18 95       	reti

00000c96 <__vector_2>:

ISR(INT1_vect)
     c96:	1f 92       	push	r1
     c98:	0f 92       	push	r0
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	0f 92       	push	r0
     c9e:	11 24       	eor	r1, r1
     ca0:	8f 93       	push	r24
     ca2:	af 93       	push	r26
     ca4:	bf 93       	push	r27
     ca6:	ef 93       	push	r30
     ca8:	ff 93       	push	r31
     caa:	df 93       	push	r29
     cac:	cf 93       	push	r28
     cae:	cd b7       	in	r28, 0x3d	; 61
     cb0:	de b7       	in	r29, 0x3e	; 62
{
	TCCR1B &= ~(1<<CS12) ;             //disconnect timer frequency
     cb2:	ae e4       	ldi	r26, 0x4E	; 78
     cb4:	b0 e0       	ldi	r27, 0x00	; 0
     cb6:	ee e4       	ldi	r30, 0x4E	; 78
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	80 81       	ld	r24, Z
     cbc:	8b 7f       	andi	r24, 0xFB	; 251
     cbe:	8c 93       	st	X, r24
	TCCR1B &= ~(1<<CS10);
     cc0:	ae e4       	ldi	r26, 0x4E	; 78
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	ee e4       	ldi	r30, 0x4E	; 78
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	80 81       	ld	r24, Z
     cca:	8e 7f       	andi	r24, 0xFE	; 254
     ccc:	8c 93       	st	X, r24
}
     cce:	cf 91       	pop	r28
     cd0:	df 91       	pop	r29
     cd2:	ff 91       	pop	r31
     cd4:	ef 91       	pop	r30
     cd6:	bf 91       	pop	r27
     cd8:	af 91       	pop	r26
     cda:	8f 91       	pop	r24
     cdc:	0f 90       	pop	r0
     cde:	0f be       	out	0x3f, r0	; 63
     ce0:	0f 90       	pop	r0
     ce2:	1f 90       	pop	r1
     ce4:	18 95       	reti

00000ce6 <__vector_18>:

ISR(INT2_vect)
     ce6:	1f 92       	push	r1
     ce8:	0f 92       	push	r0
     cea:	0f b6       	in	r0, 0x3f	; 63
     cec:	0f 92       	push	r0
     cee:	11 24       	eor	r1, r1
     cf0:	8f 93       	push	r24
     cf2:	ef 93       	push	r30
     cf4:	ff 93       	push	r31
     cf6:	df 93       	push	r29
     cf8:	cf 93       	push	r28
     cfa:	cd b7       	in	r28, 0x3d	; 61
     cfc:	de b7       	in	r29, 0x3e	; 62
{
	TCCR1B = (1<<CS12) | (1<<CS10);             //reconnect timer frequency
     cfe:	ee e4       	ldi	r30, 0x4E	; 78
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	85 e0       	ldi	r24, 0x05	; 5
     d04:	80 83       	st	Z, r24
}
     d06:	cf 91       	pop	r28
     d08:	df 91       	pop	r29
     d0a:	ff 91       	pop	r31
     d0c:	ef 91       	pop	r30
     d0e:	8f 91       	pop	r24
     d10:	0f 90       	pop	r0
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	0f 90       	pop	r0
     d16:	1f 90       	pop	r1
     d18:	18 95       	reti

00000d1a <main>:

int main ()
     d1a:	0f 93       	push	r16
     d1c:	1f 93       	push	r17
     d1e:	df 93       	push	r29
     d20:	cf 93       	push	r28
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	c4 55       	subi	r28, 0x54	; 84
     d28:	d0 40       	sbci	r29, 0x00	; 0
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	f8 94       	cli
     d2e:	de bf       	out	0x3e, r29	; 62
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	cd bf       	out	0x3d, r28	; 61
{
	Timer1_Init();
     d34:	e4 de       	rcall	.-568    	; 0xafe <_Z11Timer1_Initv>
     d36:	06 df       	rcall	.-500    	; 0xb44 <_Z9INT0_Initv>
	INT0_Init();
     d38:	2f df       	rcall	.-418    	; 0xb98 <_Z9INT1_Initv>
     d3a:	4a df       	rcall	.-364    	; 0xbd0 <_Z9INT2_Initv>
	INT1_Init();
     d3c:	e4 e3       	ldi	r30, 0x34	; 52
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
	INT2_Init();
     d40:	8f e0       	ldi	r24, 0x0F	; 15
     d42:	80 83       	st	Z, r24

	DDRC = 0x0f;                             //config first 4 pins in port c as output
     d44:	ea e3       	ldi	r30, 0x3A	; 58
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	8f e3       	ldi	r24, 0x3F	; 63
     d4a:	80 83       	st	Z, r24
	DDRA = 0x3f;                             //config first 6 pins in port a as output
     d4c:	eb e3       	ldi	r30, 0x3B	; 59
     d4e:	f0 e0       	ldi	r31, 0x00	; 0
     d50:	10 82       	st	Z, r1
     d52:	80 91 68 00 	lds	r24, 0x0068
	PORTA = 0;
     d56:	8a 30       	cpi	r24, 0x0A	; 10
     d58:	39 f4       	brne	.+14     	; 0xd68 <main+0x4e>


	while(1)
	{
		if(sec1 == 10)
     d5a:	10 92 68 00 	sts	0x0068, r1
     d5e:	80 91 69 00 	lds	r24, 0x0069
		{
			sec1 = 0;
     d62:	8f 5f       	subi	r24, 0xFF	; 255
     d64:	80 93 69 00 	sts	0x0069, r24
			sec2 ++;
     d68:	80 91 69 00 	lds	r24, 0x0069
     d6c:	86 30       	cpi	r24, 0x06	; 6
     d6e:	39 f4       	brne	.+14     	; 0xd7e <main+0x64>
		}
		if(sec2 == 6)
     d70:	10 92 69 00 	sts	0x0069, r1
     d74:	80 91 6a 00 	lds	r24, 0x006A
		{
			sec2 = 0;
     d78:	8f 5f       	subi	r24, 0xFF	; 255
     d7a:	80 93 6a 00 	sts	0x006A, r24
			min1 ++;
     d7e:	80 91 6a 00 	lds	r24, 0x006A
     d82:	8a 30       	cpi	r24, 0x0A	; 10
     d84:	39 f4       	brne	.+14     	; 0xd94 <main+0x7a>
		}
		if(min1 == 10)
     d86:	10 92 6a 00 	sts	0x006A, r1
     d8a:	80 91 6b 00 	lds	r24, 0x006B
		{
			min1 = 0;
     d8e:	8f 5f       	subi	r24, 0xFF	; 255
     d90:	80 93 6b 00 	sts	0x006B, r24
			min2 ++;
     d94:	80 91 6b 00 	lds	r24, 0x006B
     d98:	86 30       	cpi	r24, 0x06	; 6
     d9a:	39 f4       	brne	.+14     	; 0xdaa <main+0x90>
		}
		if(min2 == 6)
     d9c:	10 92 6b 00 	sts	0x006B, r1
     da0:	80 91 6c 00 	lds	r24, 0x006C
		{
			min2 = 0;
     da4:	8f 5f       	subi	r24, 0xFF	; 255
     da6:	80 93 6c 00 	sts	0x006C, r24
			hours1 ++;
     daa:	80 91 6c 00 	lds	r24, 0x006C
     dae:	8a 30       	cpi	r24, 0x0A	; 10
     db0:	39 f4       	brne	.+14     	; 0xdc0 <main+0xa6>
		}
		if(hours1 == 10)
     db2:	10 92 6c 00 	sts	0x006C, r1
     db6:	80 91 6d 00 	lds	r24, 0x006D
		{
			hours1 = 0;
     dba:	8f 5f       	subi	r24, 0xFF	; 255
     dbc:	80 93 6d 00 	sts	0x006D, r24
			hours2 ++;
     dc0:	80 91 6d 00 	lds	r24, 0x006D
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	41 f4       	brne	.+16     	; 0xdd8 <main+0xbe>
		}
		if(hours2 == 2 && hours1 == 4)
     dc8:	80 91 6c 00 	lds	r24, 0x006C
     dcc:	84 30       	cpi	r24, 0x04	; 4
     dce:	21 f4       	brne	.+8      	; 0xdd8 <main+0xbe>
     dd0:	10 92 6d 00 	sts	0x006D, r1
     dd4:	10 92 6c 00 	sts	0x006C, r1
		{
			hours2 = 0;
     dd8:	eb e3       	ldi	r30, 0x3B	; 59
     dda:	f0 e0       	ldi	r31, 0x00	; 0
			hours1 = 0;
     ddc:	80 e2       	ldi	r24, 0x20	; 32
     dde:	80 83       	st	Z, r24
		}


		PORTA = (1<<5);
     de0:	a5 e3       	ldi	r26, 0x35	; 53
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e5 e3       	ldi	r30, 0x35	; 53
     de6:	f0 e0       	ldi	r31, 0x00	; 0
		PORTC = ( (PORTC&(0xf0)) | (sec1&(0x0f)) );
     de8:	80 81       	ld	r24, Z
     dea:	98 2f       	mov	r25, r24
     dec:	90 7f       	andi	r25, 0xF0	; 240
     dee:	80 91 68 00 	lds	r24, 0x0068
     df2:	8f 70       	andi	r24, 0x0F	; 15
     df4:	89 2b       	or	r24, r25
     df6:	8c 93       	st	X, r24
     df8:	fe 01       	movw	r30, r28
     dfa:	ef 5a       	subi	r30, 0xAF	; 175
     dfc:	ff 4f       	sbci	r31, 0xFF	; 255
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	a0 e0       	ldi	r26, 0x00	; 0
     e04:	b0 e4       	ldi	r27, 0x40	; 64
     e06:	80 83       	st	Z, r24
     e08:	91 83       	std	Z+1, r25	; 0x01
     e0a:	a2 83       	std	Z+2, r26	; 0x02
     e0c:	b3 83       	std	Z+3, r27	; 0x03
     e0e:	8e 01       	movw	r16, r28
     e10:	03 5b       	subi	r16, 0xB3	; 179
     e12:	1f 4f       	sbci	r17, 0xFF	; 255
     e14:	fe 01       	movw	r30, r28
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e16:	ef 5a       	subi	r30, 0xAF	; 175
     e18:	ff 4f       	sbci	r31, 0xFF	; 255
     e1a:	60 81       	ld	r22, Z
     e1c:	71 81       	ldd	r23, Z+1	; 0x01
     e1e:	82 81       	ldd	r24, Z+2	; 0x02
     e20:	93 81       	ldd	r25, Z+3	; 0x03
     e22:	20 e0       	ldi	r18, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	4a e7       	ldi	r20, 0x7A	; 122
     e28:	53 e4       	ldi	r21, 0x43	; 67
     e2a:	fb da       	rcall	.-2570   	; 0x422 <__mulsf3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	f8 01       	movw	r30, r16
     e32:	80 83       	st	Z, r24
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	a2 83       	std	Z+2, r26	; 0x02
     e38:	b3 83       	std	Z+3, r27	; 0x03
     e3a:	fe 01       	movw	r30, r28
     e3c:	e3 5b       	subi	r30, 0xB3	; 179
     e3e:	ff 4f       	sbci	r31, 0xFF	; 255
     e40:	60 81       	ld	r22, Z
     e42:	71 81       	ldd	r23, Z+1	; 0x01
	if (__tmp < 1.0)
     e44:	82 81       	ldd	r24, Z+2	; 0x02
     e46:	93 81       	ldd	r25, Z+3	; 0x03
     e48:	20 e0       	ldi	r18, 0x00	; 0
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	40 e8       	ldi	r20, 0x80	; 128
     e4e:	5f e3       	ldi	r21, 0x3F	; 63
     e50:	34 dc       	rcall	.-1944   	; 0x6ba <__ltsf2>
     e52:	88 23       	and	r24, r24
     e54:	44 f4       	brge	.+16     	; 0xe66 <main+0x14c>
     e56:	fe 01       	movw	r30, r28
     e58:	e5 5b       	subi	r30, 0xB5	; 181
     e5a:	ff 4f       	sbci	r31, 0xFF	; 255
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	91 83       	std	Z+1, r25	; 0x01
		__ticks = 1;
     e62:	80 83       	st	Z, r24
     e64:	60 c0       	rjmp	.+192    	; 0xf26 <main+0x20c>
     e66:	fe 01       	movw	r30, r28
     e68:	e3 5b       	subi	r30, 0xB3	; 179
     e6a:	ff 4f       	sbci	r31, 0xFF	; 255
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	82 81       	ldd	r24, Z+2	; 0x02
	else if (__tmp > 65535)
     e72:	93 81       	ldd	r25, Z+3	; 0x03
     e74:	20 e0       	ldi	r18, 0x00	; 0
     e76:	3f ef       	ldi	r19, 0xFF	; 255
     e78:	4f e7       	ldi	r20, 0x7F	; 127
     e7a:	57 e4       	ldi	r21, 0x47	; 71
     e7c:	c8 db       	rcall	.-2160   	; 0x60e <__gtsf2>
     e7e:	18 16       	cp	r1, r24
     e80:	0c f0       	brlt	.+2      	; 0xe84 <main+0x16a>
     e82:	41 c0       	rjmp	.+130    	; 0xf06 <main+0x1ec>
     e84:	fe 01       	movw	r30, r28
     e86:	ef 5a       	subi	r30, 0xAF	; 175
     e88:	ff 4f       	sbci	r31, 0xFF	; 255
     e8a:	60 81       	ld	r22, Z
     e8c:	71 81       	ldd	r23, Z+1	; 0x01
     e8e:	82 81       	ldd	r24, Z+2	; 0x02
     e90:	93 81       	ldd	r25, Z+3	; 0x03
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	40 e2       	ldi	r20, 0x20	; 32
     e98:	51 e4       	ldi	r21, 0x41	; 65
     e9a:	c3 da       	rcall	.-2682   	; 0x422 <__mulsf3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	8e 01       	movw	r16, r28
     ea2:	05 5b       	subi	r16, 0xB5	; 181
     ea4:	1f 4f       	sbci	r17, 0xFF	; 255
     ea6:	bc 01       	movw	r22, r24
     ea8:	cd 01       	movw	r24, r26
     eaa:	f1 d8       	rcall	.-3614   	; 0x8e <__fixunssfsi>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	f8 01       	movw	r30, r16
     eb2:	91 83       	std	Z+1, r25	; 0x01
     eb4:	80 83       	st	Z, r24
     eb6:	1f c0       	rjmp	.+62     	; 0xef6 <main+0x1dc>
     eb8:	fe 01       	movw	r30, r28
     eba:	e7 5b       	subi	r30, 0xB7	; 183
     ebc:	ff 4f       	sbci	r31, 0xFF	; 255
     ebe:	89 e1       	ldi	r24, 0x19	; 25
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	91 83       	std	Z+1, r25	; 0x01
     ec4:	80 83       	st	Z, r24
     ec6:	fe 01       	movw	r30, r28
     ec8:	e7 5b       	subi	r30, 0xB7	; 183
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	80 81       	ld	r24, Z
     ece:	91 81       	ldd	r25, Z+1	; 0x01
     ed0:	01 97       	sbiw	r24, 0x01	; 1
     ed2:	f1 f7       	brne	.-4      	; 0xed0 <main+0x1b6>
     ed4:	fe 01       	movw	r30, r28
     ed6:	e7 5b       	subi	r30, 0xB7	; 183
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     ed8:	ff 4f       	sbci	r31, 0xFF	; 255
     eda:	91 83       	std	Z+1, r25	; 0x01
     edc:	80 83       	st	Z, r24
     ede:	de 01       	movw	r26, r28
     ee0:	a5 5b       	subi	r26, 0xB5	; 181
     ee2:	bf 4f       	sbci	r27, 0xFF	; 255
     ee4:	fe 01       	movw	r30, r28
     ee6:	e5 5b       	subi	r30, 0xB5	; 181
     ee8:	ff 4f       	sbci	r31, 0xFF	; 255
     eea:	80 81       	ld	r24, Z
     eec:	91 81       	ldd	r25, Z+1	; 0x01
     eee:	01 97       	sbiw	r24, 0x01	; 1
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ef0:	11 96       	adiw	r26, 0x01	; 1
     ef2:	9c 93       	st	X, r25
     ef4:	8e 93       	st	-X, r24
     ef6:	fe 01       	movw	r30, r28
     ef8:	e5 5b       	subi	r30, 0xB5	; 181
     efa:	ff 4f       	sbci	r31, 0xFF	; 255
     efc:	80 81       	ld	r24, Z
     efe:	91 81       	ldd	r25, Z+1	; 0x01
     f00:	00 97       	sbiw	r24, 0x00	; 0
     f02:	d1 f6       	brne	.-76     	; 0xeb8 <main+0x19e>
     f04:	26 c0       	rjmp	.+76     	; 0xf52 <main+0x238>
     f06:	8e 01       	movw	r16, r28
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f08:	05 5b       	subi	r16, 0xB5	; 181
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
     f0c:	fe 01       	movw	r30, r28
     f0e:	e3 5b       	subi	r30, 0xB3	; 179
     f10:	ff 4f       	sbci	r31, 0xFF	; 255
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	b9 d8       	rcall	.-3726   	; 0x8e <__fixunssfsi>
     f1c:	dc 01       	movw	r26, r24
     f1e:	cb 01       	movw	r24, r22
     f20:	f8 01       	movw	r30, r16
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	80 83       	st	Z, r24
     f26:	de 01       	movw	r26, r28
     f28:	a9 5b       	subi	r26, 0xB9	; 185
     f2a:	bf 4f       	sbci	r27, 0xFF	; 255
     f2c:	fe 01       	movw	r30, r28
     f2e:	e5 5b       	subi	r30, 0xB5	; 181
     f30:	ff 4f       	sbci	r31, 0xFF	; 255
     f32:	80 81       	ld	r24, Z
     f34:	91 81       	ldd	r25, Z+1	; 0x01
     f36:	8d 93       	st	X+, r24
     f38:	9c 93       	st	X, r25
     f3a:	fe 01       	movw	r30, r28
     f3c:	e9 5b       	subi	r30, 0xB9	; 185
     f3e:	ff 4f       	sbci	r31, 0xFF	; 255
     f40:	80 81       	ld	r24, Z
     f42:	91 81       	ldd	r25, Z+1	; 0x01
     f44:	01 97       	sbiw	r24, 0x01	; 1
     f46:	f1 f7       	brne	.-4      	; 0xf44 <main+0x22a>
     f48:	fe 01       	movw	r30, r28
     f4a:	e9 5b       	subi	r30, 0xB9	; 185
     f4c:	ff 4f       	sbci	r31, 0xFF	; 255
     f4e:	91 83       	std	Z+1, r25	; 0x01
     f50:	80 83       	st	Z, r24
     f52:	eb e3       	ldi	r30, 0x3B	; 59
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 e1       	ldi	r24, 0x10	; 16
     f58:	80 83       	st	Z, r24
     f5a:	a5 e3       	ldi	r26, 0x35	; 53
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e5 e3       	ldi	r30, 0x35	; 53
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	98 2f       	mov	r25, r24
		_delay_ms(2);

		PORTA = (1<<4);
     f66:	90 7f       	andi	r25, 0xF0	; 240
     f68:	80 91 69 00 	lds	r24, 0x0069
     f6c:	8f 70       	andi	r24, 0x0F	; 15
		PORTC = ( (PORTC&(0xf0)) | (sec2&(0x0f)) );
     f6e:	89 2b       	or	r24, r25
     f70:	8c 93       	st	X, r24
     f72:	fe 01       	movw	r30, r28
     f74:	ed 5b       	subi	r30, 0xBD	; 189
     f76:	ff 4f       	sbci	r31, 0xFF	; 255
     f78:	80 e0       	ldi	r24, 0x00	; 0
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	a0 e0       	ldi	r26, 0x00	; 0
     f7e:	b0 e4       	ldi	r27, 0x40	; 64
     f80:	80 83       	st	Z, r24
     f82:	91 83       	std	Z+1, r25	; 0x01
     f84:	a2 83       	std	Z+2, r26	; 0x02
     f86:	b3 83       	std	Z+3, r27	; 0x03
     f88:	8e 01       	movw	r16, r28
     f8a:	01 5c       	subi	r16, 0xC1	; 193
     f8c:	1f 4f       	sbci	r17, 0xFF	; 255
     f8e:	fe 01       	movw	r30, r28
     f90:	ed 5b       	subi	r30, 0xBD	; 189
     f92:	ff 4f       	sbci	r31, 0xFF	; 255
     f94:	60 81       	ld	r22, Z
     f96:	71 81       	ldd	r23, Z+1	; 0x01
     f98:	82 81       	ldd	r24, Z+2	; 0x02
     f9a:	93 81       	ldd	r25, Z+3	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	4a e7       	ldi	r20, 0x7A	; 122
     fa2:	53 e4       	ldi	r21, 0x43	; 67
     fa4:	3e da       	rcall	.-2948   	; 0x422 <__mulsf3>
     fa6:	dc 01       	movw	r26, r24
     fa8:	cb 01       	movw	r24, r22
     faa:	f8 01       	movw	r30, r16
     fac:	80 83       	st	Z, r24
     fae:	91 83       	std	Z+1, r25	; 0x01
     fb0:	a2 83       	std	Z+2, r26	; 0x02
     fb2:	b3 83       	std	Z+3, r27	; 0x03
     fb4:	fe 01       	movw	r30, r28
     fb6:	ff 96       	adiw	r30, 0x3f	; 63
     fb8:	60 81       	ld	r22, Z
     fba:	71 81       	ldd	r23, Z+1	; 0x01
     fbc:	82 81       	ldd	r24, Z+2	; 0x02
     fbe:	93 81       	ldd	r25, Z+3	; 0x03
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	40 e8       	ldi	r20, 0x80	; 128
     fc6:	5f e3       	ldi	r21, 0x3F	; 63
     fc8:	78 db       	rcall	.-2320   	; 0x6ba <__ltsf2>
	if (__tmp < 1.0)
     fca:	88 23       	and	r24, r24
     fcc:	2c f4       	brge	.+10     	; 0xfd8 <main+0x2be>
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	9e af       	std	Y+62, r25	; 0x3e
     fd4:	8d af       	std	Y+61, r24	; 0x3d
     fd6:	42 c0       	rjmp	.+132    	; 0x105c <main+0x342>
     fd8:	fe 01       	movw	r30, r28
     fda:	ff 96       	adiw	r30, 0x3f	; 63
     fdc:	60 81       	ld	r22, Z
     fde:	71 81       	ldd	r23, Z+1	; 0x01
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	20 e0       	ldi	r18, 0x00	; 0
		__ticks = 1;
     fe6:	3f ef       	ldi	r19, 0xFF	; 255
     fe8:	4f e7       	ldi	r20, 0x7F	; 127
     fea:	57 e4       	ldi	r21, 0x47	; 71
     fec:	10 db       	rcall	.-2528   	; 0x60e <__gtsf2>
     fee:	18 16       	cp	r1, r24
	else if (__tmp > 65535)
     ff0:	54 f5       	brge	.+84     	; 0x1046 <main+0x32c>
     ff2:	fe 01       	movw	r30, r28
     ff4:	ed 5b       	subi	r30, 0xBD	; 189
     ff6:	ff 4f       	sbci	r31, 0xFF	; 255
     ff8:	60 81       	ld	r22, Z
     ffa:	71 81       	ldd	r23, Z+1	; 0x01
     ffc:	82 81       	ldd	r24, Z+2	; 0x02
     ffe:	93 81       	ldd	r25, Z+3	; 0x03
    1000:	20 e0       	ldi	r18, 0x00	; 0
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	40 e2       	ldi	r20, 0x20	; 32
    1006:	51 e4       	ldi	r21, 0x41	; 65
    1008:	0c da       	rcall	.-3048   	; 0x422 <__mulsf3>
    100a:	dc 01       	movw	r26, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    100c:	cb 01       	movw	r24, r22
    100e:	bc 01       	movw	r22, r24
    1010:	cd 01       	movw	r24, r26
    1012:	3d d8       	rcall	.-3974   	; 0x8e <__fixunssfsi>
    1014:	dc 01       	movw	r26, r24
    1016:	cb 01       	movw	r24, r22
    1018:	9e af       	std	Y+62, r25	; 0x3e
    101a:	8d af       	std	Y+61, r24	; 0x3d
    101c:	0f c0       	rjmp	.+30     	; 0x103c <main+0x322>
    101e:	89 e1       	ldi	r24, 0x19	; 25
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	9c af       	std	Y+60, r25	; 0x3c
    1024:	8b af       	std	Y+59, r24	; 0x3b
    1026:	8b ad       	ldd	r24, Y+59	; 0x3b
    1028:	9c ad       	ldd	r25, Y+60	; 0x3c
    102a:	01 97       	sbiw	r24, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <main+0x310>
    102e:	9c af       	std	Y+60, r25	; 0x3c
    1030:	8b af       	std	Y+59, r24	; 0x3b
    1032:	8d ad       	ldd	r24, Y+61	; 0x3d
    1034:	9e ad       	ldd	r25, Y+62	; 0x3e
    1036:	01 97       	sbiw	r24, 0x01	; 1
    1038:	9e af       	std	Y+62, r25	; 0x3e
    103a:	8d af       	std	Y+61, r24	; 0x3d
    103c:	8d ad       	ldd	r24, Y+61	; 0x3d
    103e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1040:	00 97       	sbiw	r24, 0x00	; 0
    1042:	69 f7       	brne	.-38     	; 0x101e <main+0x304>
    1044:	15 c0       	rjmp	.+42     	; 0x1070 <main+0x356>
    1046:	fe 01       	movw	r30, r28
    1048:	ff 96       	adiw	r30, 0x3f	; 63
    104a:	60 81       	ld	r22, Z
    104c:	71 81       	ldd	r23, Z+1	; 0x01
    104e:	82 81       	ldd	r24, Z+2	; 0x02
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1050:	93 81       	ldd	r25, Z+3	; 0x03
    1052:	1d d8       	rcall	.-4038   	; 0x8e <__fixunssfsi>
    1054:	dc 01       	movw	r26, r24
    1056:	cb 01       	movw	r24, r22
    1058:	9e af       	std	Y+62, r25	; 0x3e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    105a:	8d af       	std	Y+61, r24	; 0x3d
    105c:	8d ad       	ldd	r24, Y+61	; 0x3d
    105e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1060:	9a af       	std	Y+58, r25	; 0x3a
    1062:	89 af       	std	Y+57, r24	; 0x39
    1064:	89 ad       	ldd	r24, Y+57	; 0x39
    1066:	9a ad       	ldd	r25, Y+58	; 0x3a
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	f1 f7       	brne	.-4      	; 0x1068 <main+0x34e>
    106c:	9a af       	std	Y+58, r25	; 0x3a
    106e:	89 af       	std	Y+57, r24	; 0x39
    1070:	eb e3       	ldi	r30, 0x3B	; 59
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	88 e0       	ldi	r24, 0x08	; 8
    1076:	80 83       	st	Z, r24
    1078:	a5 e3       	ldi	r26, 0x35	; 53
    107a:	b0 e0       	ldi	r27, 0x00	; 0
    107c:	e5 e3       	ldi	r30, 0x35	; 53
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	80 81       	ld	r24, Z
    1082:	98 2f       	mov	r25, r24
    1084:	90 7f       	andi	r25, 0xF0	; 240
    1086:	80 91 6a 00 	lds	r24, 0x006A
    108a:	8f 70       	andi	r24, 0x0F	; 15
    108c:	89 2b       	or	r24, r25
    108e:	8c 93       	st	X, r24
		_delay_ms(2);

		PORTA = (1<<3);
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	a0 e0       	ldi	r26, 0x00	; 0
    1096:	b0 e4       	ldi	r27, 0x40	; 64
		PORTC = ( (PORTC&(0xf0)) | (min1&(0x0f)) );
    1098:	8d ab       	std	Y+53, r24	; 0x35
    109a:	9e ab       	std	Y+54, r25	; 0x36
    109c:	af ab       	std	Y+55, r26	; 0x37
    109e:	b8 af       	std	Y+56, r27	; 0x38
    10a0:	6d a9       	ldd	r22, Y+53	; 0x35
    10a2:	7e a9       	ldd	r23, Y+54	; 0x36
    10a4:	8f a9       	ldd	r24, Y+55	; 0x37
    10a6:	98 ad       	ldd	r25, Y+56	; 0x38
    10a8:	20 e0       	ldi	r18, 0x00	; 0
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	4a e7       	ldi	r20, 0x7A	; 122
    10ae:	53 e4       	ldi	r21, 0x43	; 67
    10b0:	b8 d9       	rcall	.-3216   	; 0x422 <__mulsf3>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	89 ab       	std	Y+49, r24	; 0x31
    10b8:	9a ab       	std	Y+50, r25	; 0x32
    10ba:	ab ab       	std	Y+51, r26	; 0x33
    10bc:	bc ab       	std	Y+52, r27	; 0x34
    10be:	69 a9       	ldd	r22, Y+49	; 0x31
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10c0:	7a a9       	ldd	r23, Y+50	; 0x32
    10c2:	8b a9       	ldd	r24, Y+51	; 0x33
    10c4:	9c a9       	ldd	r25, Y+52	; 0x34
    10c6:	20 e0       	ldi	r18, 0x00	; 0
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	40 e8       	ldi	r20, 0x80	; 128
    10cc:	5f e3       	ldi	r21, 0x3F	; 63
    10ce:	f5 da       	rcall	.-2582   	; 0x6ba <__ltsf2>
    10d0:	88 23       	and	r24, r24
    10d2:	2c f4       	brge	.+10     	; 0x10de <main+0x3c4>
    10d4:	81 e0       	ldi	r24, 0x01	; 1
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	98 ab       	std	Y+48, r25	; 0x30
    10da:	8f a7       	std	Y+47, r24	; 0x2f
    10dc:	3d c0       	rjmp	.+122    	; 0x1158 <main+0x43e>
    10de:	69 a9       	ldd	r22, Y+49	; 0x31
	if (__tmp < 1.0)
    10e0:	7a a9       	ldd	r23, Y+50	; 0x32
    10e2:	8b a9       	ldd	r24, Y+51	; 0x33
    10e4:	9c a9       	ldd	r25, Y+52	; 0x34
    10e6:	20 e0       	ldi	r18, 0x00	; 0
    10e8:	3f ef       	ldi	r19, 0xFF	; 255
    10ea:	4f e7       	ldi	r20, 0x7F	; 127
    10ec:	57 e4       	ldi	r21, 0x47	; 71
    10ee:	8f da       	rcall	.-2786   	; 0x60e <__gtsf2>
    10f0:	18 16       	cp	r1, r24
    10f2:	44 f5       	brge	.+80     	; 0x1144 <main+0x42a>
    10f4:	6d a9       	ldd	r22, Y+53	; 0x35
    10f6:	7e a9       	ldd	r23, Y+54	; 0x36
		__ticks = 1;
    10f8:	8f a9       	ldd	r24, Y+55	; 0x37
    10fa:	98 ad       	ldd	r25, Y+56	; 0x38
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	40 e2       	ldi	r20, 0x20	; 32
	else if (__tmp > 65535)
    1102:	51 e4       	ldi	r21, 0x41	; 65
    1104:	8e d9       	rcall	.-3300   	; 0x422 <__mulsf3>
    1106:	dc 01       	movw	r26, r24
    1108:	cb 01       	movw	r24, r22
    110a:	bc 01       	movw	r22, r24
    110c:	cd 01       	movw	r24, r26
    110e:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1112:	dc 01       	movw	r26, r24
    1114:	cb 01       	movw	r24, r22
    1116:	98 ab       	std	Y+48, r25	; 0x30
    1118:	8f a7       	std	Y+47, r24	; 0x2f
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    111a:	0f c0       	rjmp	.+30     	; 0x113a <main+0x420>
    111c:	89 e1       	ldi	r24, 0x19	; 25
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	9e a7       	std	Y+46, r25	; 0x2e
    1122:	8d a7       	std	Y+45, r24	; 0x2d
    1124:	8d a5       	ldd	r24, Y+45	; 0x2d
    1126:	9e a5       	ldd	r25, Y+46	; 0x2e
    1128:	01 97       	sbiw	r24, 0x01	; 1
    112a:	f1 f7       	brne	.-4      	; 0x1128 <main+0x40e>
    112c:	9e a7       	std	Y+46, r25	; 0x2e
    112e:	8d a7       	std	Y+45, r24	; 0x2d
    1130:	8f a5       	ldd	r24, Y+47	; 0x2f
    1132:	98 a9       	ldd	r25, Y+48	; 0x30
    1134:	01 97       	sbiw	r24, 0x01	; 1
    1136:	98 ab       	std	Y+48, r25	; 0x30
    1138:	8f a7       	std	Y+47, r24	; 0x2f
    113a:	8f a5       	ldd	r24, Y+47	; 0x2f
    113c:	98 a9       	ldd	r25, Y+48	; 0x30
    113e:	00 97       	sbiw	r24, 0x00	; 0
    1140:	69 f7       	brne	.-38     	; 0x111c <main+0x402>
    1142:	14 c0       	rjmp	.+40     	; 0x116c <main+0x452>
    1144:	69 a9       	ldd	r22, Y+49	; 0x31
    1146:	7a a9       	ldd	r23, Y+50	; 0x32
    1148:	8b a9       	ldd	r24, Y+51	; 0x33
    114a:	9c a9       	ldd	r25, Y+52	; 0x34
    114c:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1150:	dc 01       	movw	r26, r24
    1152:	cb 01       	movw	r24, r22
    1154:	98 ab       	std	Y+48, r25	; 0x30
    1156:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1158:	8f a5       	ldd	r24, Y+47	; 0x2f
    115a:	98 a9       	ldd	r25, Y+48	; 0x30
    115c:	9c a7       	std	Y+44, r25	; 0x2c
    115e:	8b a7       	std	Y+43, r24	; 0x2b
    1160:	8b a5       	ldd	r24, Y+43	; 0x2b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1162:	9c a5       	ldd	r25, Y+44	; 0x2c
    1164:	01 97       	sbiw	r24, 0x01	; 1
    1166:	f1 f7       	brne	.-4      	; 0x1164 <main+0x44a>
    1168:	9c a7       	std	Y+44, r25	; 0x2c
    116a:	8b a7       	std	Y+43, r24	; 0x2b
    116c:	eb e3       	ldi	r30, 0x3B	; 59
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	84 e0       	ldi	r24, 0x04	; 4
    1172:	80 83       	st	Z, r24
    1174:	a5 e3       	ldi	r26, 0x35	; 53
    1176:	b0 e0       	ldi	r27, 0x00	; 0
    1178:	e5 e3       	ldi	r30, 0x35	; 53
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	80 81       	ld	r24, Z
    117e:	98 2f       	mov	r25, r24
    1180:	90 7f       	andi	r25, 0xF0	; 240
    1182:	80 91 6b 00 	lds	r24, 0x006B
    1186:	8f 70       	andi	r24, 0x0F	; 15
    1188:	89 2b       	or	r24, r25
    118a:	8c 93       	st	X, r24
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	a0 e0       	ldi	r26, 0x00	; 0
    1192:	b0 e4       	ldi	r27, 0x40	; 64
		_delay_ms(2);

		PORTA = (1<<2);
    1194:	8f a3       	std	Y+39, r24	; 0x27
    1196:	98 a7       	std	Y+40, r25	; 0x28
    1198:	a9 a7       	std	Y+41, r26	; 0x29
    119a:	ba a7       	std	Y+42, r27	; 0x2a
    119c:	6f a1       	ldd	r22, Y+39	; 0x27
    119e:	78 a5       	ldd	r23, Y+40	; 0x28
    11a0:	89 a5       	ldd	r24, Y+41	; 0x29
    11a2:	9a a5       	ldd	r25, Y+42	; 0x2a
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	4a e7       	ldi	r20, 0x7A	; 122
    11aa:	53 e4       	ldi	r21, 0x43	; 67
    11ac:	3a d9       	rcall	.-3468   	; 0x422 <__mulsf3>
    11ae:	dc 01       	movw	r26, r24
    11b0:	cb 01       	movw	r24, r22
    11b2:	8b a3       	std	Y+35, r24	; 0x23
    11b4:	9c a3       	std	Y+36, r25	; 0x24
    11b6:	ad a3       	std	Y+37, r26	; 0x25
    11b8:	be a3       	std	Y+38, r27	; 0x26
    11ba:	6b a1       	ldd	r22, Y+35	; 0x23
    11bc:	7c a1       	ldd	r23, Y+36	; 0x24
    11be:	8d a1       	ldd	r24, Y+37	; 0x25
    11c0:	9e a1       	ldd	r25, Y+38	; 0x26
    11c2:	20 e0       	ldi	r18, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	40 e8       	ldi	r20, 0x80	; 128
    11c8:	5f e3       	ldi	r21, 0x3F	; 63
    11ca:	77 da       	rcall	.-2834   	; 0x6ba <__ltsf2>
    11cc:	88 23       	and	r24, r24
    11ce:	2c f4       	brge	.+10     	; 0x11da <main+0x4c0>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	9a a3       	std	Y+34, r25	; 0x22
    11d6:	89 a3       	std	Y+33, r24	; 0x21
    11d8:	3d c0       	rjmp	.+122    	; 0x1254 <main+0x53a>
    11da:	6b a1       	ldd	r22, Y+35	; 0x23
    11dc:	7c a1       	ldd	r23, Y+36	; 0x24
    11de:	8d a1       	ldd	r24, Y+37	; 0x25
    11e0:	9e a1       	ldd	r25, Y+38	; 0x26
    11e2:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    11e4:	3f ef       	ldi	r19, 0xFF	; 255
    11e6:	4f e7       	ldi	r20, 0x7F	; 127
    11e8:	57 e4       	ldi	r21, 0x47	; 71
    11ea:	11 da       	rcall	.-3038   	; 0x60e <__gtsf2>
    11ec:	18 16       	cp	r1, r24
    11ee:	44 f5       	brge	.+80     	; 0x1240 <main+0x526>
    11f0:	6f a1       	ldd	r22, Y+39	; 0x27
    11f2:	78 a5       	ldd	r23, Y+40	; 0x28
    11f4:	89 a5       	ldd	r24, Y+41	; 0x29
    11f6:	9a a5       	ldd	r25, Y+42	; 0x2a
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
		__ticks = 1;
    11fc:	40 e2       	ldi	r20, 0x20	; 32
    11fe:	51 e4       	ldi	r21, 0x41	; 65
    1200:	10 d9       	rcall	.-3552   	; 0x422 <__mulsf3>
    1202:	dc 01       	movw	r26, r24
    1204:	cb 01       	movw	r24, r22
	else if (__tmp > 65535)
    1206:	bc 01       	movw	r22, r24
    1208:	cd 01       	movw	r24, r26
    120a:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    120e:	dc 01       	movw	r26, r24
    1210:	cb 01       	movw	r24, r22
    1212:	9a a3       	std	Y+34, r25	; 0x22
    1214:	89 a3       	std	Y+33, r24	; 0x21
    1216:	0f c0       	rjmp	.+30     	; 0x1236 <main+0x51c>
    1218:	89 e1       	ldi	r24, 0x19	; 25
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	98 a3       	std	Y+32, r25	; 0x20
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    121e:	8f 8f       	std	Y+31, r24	; 0x1f
    1220:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1222:	98 a1       	ldd	r25, Y+32	; 0x20
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	f1 f7       	brne	.-4      	; 0x1224 <main+0x50a>
    1228:	98 a3       	std	Y+32, r25	; 0x20
    122a:	8f 8f       	std	Y+31, r24	; 0x1f
    122c:	89 a1       	ldd	r24, Y+33	; 0x21
    122e:	9a a1       	ldd	r25, Y+34	; 0x22
    1230:	01 97       	sbiw	r24, 0x01	; 1
    1232:	9a a3       	std	Y+34, r25	; 0x22
    1234:	89 a3       	std	Y+33, r24	; 0x21
    1236:	89 a1       	ldd	r24, Y+33	; 0x21
    1238:	9a a1       	ldd	r25, Y+34	; 0x22
    123a:	00 97       	sbiw	r24, 0x00	; 0
    123c:	69 f7       	brne	.-38     	; 0x1218 <main+0x4fe>
    123e:	14 c0       	rjmp	.+40     	; 0x1268 <main+0x54e>
    1240:	6b a1       	ldd	r22, Y+35	; 0x23
    1242:	7c a1       	ldd	r23, Y+36	; 0x24
    1244:	8d a1       	ldd	r24, Y+37	; 0x25
    1246:	9e a1       	ldd	r25, Y+38	; 0x26
    1248:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    124c:	dc 01       	movw	r26, r24
    124e:	cb 01       	movw	r24, r22
    1250:	9a a3       	std	Y+34, r25	; 0x22
    1252:	89 a3       	std	Y+33, r24	; 0x21
    1254:	89 a1       	ldd	r24, Y+33	; 0x21
    1256:	9a a1       	ldd	r25, Y+34	; 0x22
    1258:	9e 8f       	std	Y+30, r25	; 0x1e
    125a:	8d 8f       	std	Y+29, r24	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    125e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1260:	01 97       	sbiw	r24, 0x01	; 1
    1262:	f1 f7       	brne	.-4      	; 0x1260 <main+0x546>
    1264:	9e 8f       	std	Y+30, r25	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1266:	8d 8f       	std	Y+29, r24	; 0x1d
    1268:	eb e3       	ldi	r30, 0x3B	; 59
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	82 e0       	ldi	r24, 0x02	; 2
    126e:	80 83       	st	Z, r24
    1270:	a5 e3       	ldi	r26, 0x35	; 53
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	e5 e3       	ldi	r30, 0x35	; 53
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	80 81       	ld	r24, Z
    127a:	98 2f       	mov	r25, r24
    127c:	90 7f       	andi	r25, 0xF0	; 240
    127e:	80 91 6c 00 	lds	r24, 0x006C
    1282:	8f 70       	andi	r24, 0x0F	; 15
    1284:	89 2b       	or	r24, r25
    1286:	8c 93       	st	X, r24
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	a0 e0       	ldi	r26, 0x00	; 0
    128e:	b0 e4       	ldi	r27, 0x40	; 64
    1290:	89 8f       	std	Y+25, r24	; 0x19
    1292:	9a 8f       	std	Y+26, r25	; 0x1a
    1294:	ab 8f       	std	Y+27, r26	; 0x1b
    1296:	bc 8f       	std	Y+28, r27	; 0x1c
		PORTC = ( (PORTC&(0xf0)) | (min2&(0x0f)) );
		_delay_ms(2);

		PORTA = (1<<1);
    1298:	69 8d       	ldd	r22, Y+25	; 0x19
    129a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    129c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    129e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	4a e7       	ldi	r20, 0x7A	; 122
    12a6:	53 e4       	ldi	r21, 0x43	; 67
    12a8:	bc d8       	rcall	.-3720   	; 0x422 <__mulsf3>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	8d 8b       	std	Y+21, r24	; 0x15
    12b0:	9e 8b       	std	Y+22, r25	; 0x16
    12b2:	af 8b       	std	Y+23, r26	; 0x17
    12b4:	b8 8f       	std	Y+24, r27	; 0x18
    12b6:	6d 89       	ldd	r22, Y+21	; 0x15
    12b8:	7e 89       	ldd	r23, Y+22	; 0x16
    12ba:	8f 89       	ldd	r24, Y+23	; 0x17
    12bc:	98 8d       	ldd	r25, Y+24	; 0x18
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	40 e8       	ldi	r20, 0x80	; 128
    12c4:	5f e3       	ldi	r21, 0x3F	; 63
    12c6:	f9 d9       	rcall	.-3086   	; 0x6ba <__ltsf2>
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12c8:	88 23       	and	r24, r24
    12ca:	2c f4       	brge	.+10     	; 0x12d6 <main+0x5bc>
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	9c 8b       	std	Y+20, r25	; 0x14
    12d2:	8b 8b       	std	Y+19, r24	; 0x13
    12d4:	3d c0       	rjmp	.+122    	; 0x1350 <main+0x636>
    12d6:	6d 89       	ldd	r22, Y+21	; 0x15
    12d8:	7e 89       	ldd	r23, Y+22	; 0x16
    12da:	8f 89       	ldd	r24, Y+23	; 0x17
    12dc:	98 8d       	ldd	r25, Y+24	; 0x18
    12de:	20 e0       	ldi	r18, 0x00	; 0
    12e0:	3f ef       	ldi	r19, 0xFF	; 255
    12e2:	4f e7       	ldi	r20, 0x7F	; 127
    12e4:	57 e4       	ldi	r21, 0x47	; 71
    12e6:	93 d9       	rcall	.-3290   	; 0x60e <__gtsf2>
	if (__tmp < 1.0)
    12e8:	18 16       	cp	r1, r24
    12ea:	44 f5       	brge	.+80     	; 0x133c <main+0x622>
    12ec:	69 8d       	ldd	r22, Y+25	; 0x19
    12ee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	40 e2       	ldi	r20, 0x20	; 32
    12fa:	51 e4       	ldi	r21, 0x41	; 65
    12fc:	92 d8       	rcall	.-3804   	; 0x422 <__mulsf3>
    12fe:	dc 01       	movw	r26, r24
		__ticks = 1;
    1300:	cb 01       	movw	r24, r22
    1302:	bc 01       	movw	r22, r24
    1304:	cd 01       	movw	r24, r26
    1306:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
	else if (__tmp > 65535)
    130a:	dc 01       	movw	r26, r24
    130c:	cb 01       	movw	r24, r22
    130e:	9c 8b       	std	Y+20, r25	; 0x14
    1310:	8b 8b       	std	Y+19, r24	; 0x13
    1312:	0f c0       	rjmp	.+30     	; 0x1332 <main+0x618>
    1314:	89 e1       	ldi	r24, 0x19	; 25
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	9a 8b       	std	Y+18, r25	; 0x12
    131a:	89 8b       	std	Y+17, r24	; 0x11
    131c:	89 89       	ldd	r24, Y+17	; 0x11
    131e:	9a 89       	ldd	r25, Y+18	; 0x12
    1320:	01 97       	sbiw	r24, 0x01	; 1
    1322:	f1 f7       	brne	.-4      	; 0x1320 <main+0x606>
    1324:	9a 8b       	std	Y+18, r25	; 0x12
    1326:	89 8b       	std	Y+17, r24	; 0x11
    1328:	8b 89       	ldd	r24, Y+19	; 0x13
    132a:	9c 89       	ldd	r25, Y+20	; 0x14
    132c:	01 97       	sbiw	r24, 0x01	; 1
    132e:	9c 8b       	std	Y+20, r25	; 0x14
    1330:	8b 8b       	std	Y+19, r24	; 0x13
    1332:	8b 89       	ldd	r24, Y+19	; 0x13
    1334:	9c 89       	ldd	r25, Y+20	; 0x14
    1336:	00 97       	sbiw	r24, 0x00	; 0
    1338:	69 f7       	brne	.-38     	; 0x1314 <main+0x5fa>
    133a:	14 c0       	rjmp	.+40     	; 0x1364 <main+0x64a>
    133c:	6d 89       	ldd	r22, Y+21	; 0x15
    133e:	7e 89       	ldd	r23, Y+22	; 0x16
    1340:	8f 89       	ldd	r24, Y+23	; 0x17
    1342:	98 8d       	ldd	r25, Y+24	; 0x18
    1344:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1348:	dc 01       	movw	r26, r24
    134a:	cb 01       	movw	r24, r22
    134c:	9c 8b       	std	Y+20, r25	; 0x14
    134e:	8b 8b       	std	Y+19, r24	; 0x13
    1350:	8b 89       	ldd	r24, Y+19	; 0x13
    1352:	9c 89       	ldd	r25, Y+20	; 0x14
    1354:	98 8b       	std	Y+16, r25	; 0x10
    1356:	8f 87       	std	Y+15, r24	; 0x0f
    1358:	8f 85       	ldd	r24, Y+15	; 0x0f
    135a:	98 89       	ldd	r25, Y+16	; 0x10
    135c:	01 97       	sbiw	r24, 0x01	; 1
    135e:	f1 f7       	brne	.-4      	; 0x135c <main+0x642>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1360:	98 8b       	std	Y+16, r25	; 0x10
    1362:	8f 87       	std	Y+15, r24	; 0x0f
    1364:	eb e3       	ldi	r30, 0x3B	; 59
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	81 e0       	ldi	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    136a:	80 83       	st	Z, r24
    136c:	a5 e3       	ldi	r26, 0x35	; 53
    136e:	b0 e0       	ldi	r27, 0x00	; 0
    1370:	e5 e3       	ldi	r30, 0x35	; 53
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	98 2f       	mov	r25, r24
    1378:	90 7f       	andi	r25, 0xF0	; 240
    137a:	80 91 6d 00 	lds	r24, 0x006D
    137e:	8f 70       	andi	r24, 0x0F	; 15
    1380:	89 2b       	or	r24, r25
    1382:	8c 93       	st	X, r24
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	a0 e0       	ldi	r26, 0x00	; 0
    138a:	b0 e4       	ldi	r27, 0x40	; 64
    138c:	8b 87       	std	Y+11, r24	; 0x0b
    138e:	9c 87       	std	Y+12, r25	; 0x0c
    1390:	ad 87       	std	Y+13, r26	; 0x0d
    1392:	be 87       	std	Y+14, r27	; 0x0e
    1394:	6b 85       	ldd	r22, Y+11	; 0x0b
    1396:	7c 85       	ldd	r23, Y+12	; 0x0c
    1398:	8d 85       	ldd	r24, Y+13	; 0x0d
    139a:	9e 85       	ldd	r25, Y+14	; 0x0e
		PORTC = ( (PORTC&(0xf0)) | (hours1&(0x0f)) );
		_delay_ms(2);

		PORTA = (1<<0);
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	4a e7       	ldi	r20, 0x7A	; 122
    13a2:	53 e4       	ldi	r21, 0x43	; 67
    13a4:	3e d8       	rcall	.-3972   	; 0x422 <__mulsf3>
    13a6:	dc 01       	movw	r26, r24
    13a8:	cb 01       	movw	r24, r22
    13aa:	8f 83       	std	Y+7, r24	; 0x07
    13ac:	98 87       	std	Y+8, r25	; 0x08
    13ae:	a9 87       	std	Y+9, r26	; 0x09
    13b0:	ba 87       	std	Y+10, r27	; 0x0a
    13b2:	6f 81       	ldd	r22, Y+7	; 0x07
    13b4:	78 85       	ldd	r23, Y+8	; 0x08
    13b6:	89 85       	ldd	r24, Y+9	; 0x09
    13b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	40 e8       	ldi	r20, 0x80	; 128
    13c0:	5f e3       	ldi	r21, 0x3F	; 63
    13c2:	7b d9       	rcall	.-3338   	; 0x6ba <__ltsf2>
    13c4:	88 23       	and	r24, r24
    13c6:	2c f4       	brge	.+10     	; 0x13d2 <main+0x6b8>
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13cc:	9e 83       	std	Y+6, r25	; 0x06
    13ce:	8d 83       	std	Y+5, r24	; 0x05
    13d0:	3d c0       	rjmp	.+122    	; 0x144c <main+0x732>
    13d2:	6f 81       	ldd	r22, Y+7	; 0x07
    13d4:	78 85       	ldd	r23, Y+8	; 0x08
    13d6:	89 85       	ldd	r24, Y+9	; 0x09
    13d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	3f ef       	ldi	r19, 0xFF	; 255
    13de:	4f e7       	ldi	r20, 0x7F	; 127
    13e0:	57 e4       	ldi	r21, 0x47	; 71
    13e2:	15 d9       	rcall	.-3542   	; 0x60e <__gtsf2>
    13e4:	18 16       	cp	r1, r24
    13e6:	44 f5       	brge	.+80     	; 0x1438 <main+0x71e>
    13e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    13ea:	7c 85       	ldd	r23, Y+12	; 0x0c
	if (__tmp < 1.0)
    13ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    13ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	40 e2       	ldi	r20, 0x20	; 32
    13f6:	51 e4       	ldi	r21, 0x41	; 65
    13f8:	14 d8       	rcall	.-4056   	; 0x422 <__mulsf3>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	bc 01       	movw	r22, r24
    1400:	cd 01       	movw	r24, r26
    1402:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
		__ticks = 1;
    1406:	dc 01       	movw	r26, r24
    1408:	cb 01       	movw	r24, r22
    140a:	9e 83       	std	Y+6, r25	; 0x06
    140c:	8d 83       	std	Y+5, r24	; 0x05
	else if (__tmp > 65535)
    140e:	0f c0       	rjmp	.+30     	; 0x142e <main+0x714>
    1410:	89 e1       	ldi	r24, 0x19	; 25
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	9c 83       	std	Y+4, r25	; 0x04
    1416:	8b 83       	std	Y+3, r24	; 0x03
    1418:	8b 81       	ldd	r24, Y+3	; 0x03
    141a:	9c 81       	ldd	r25, Y+4	; 0x04
    141c:	01 97       	sbiw	r24, 0x01	; 1
    141e:	f1 f7       	brne	.-4      	; 0x141c <main+0x702>
    1420:	9c 83       	std	Y+4, r25	; 0x04
    1422:	8b 83       	std	Y+3, r24	; 0x03
    1424:	8d 81       	ldd	r24, Y+5	; 0x05
    1426:	9e 81       	ldd	r25, Y+6	; 0x06
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	9e 83       	std	Y+6, r25	; 0x06
    142c:	8d 83       	std	Y+5, r24	; 0x05
    142e:	8d 81       	ldd	r24, Y+5	; 0x05
    1430:	9e 81       	ldd	r25, Y+6	; 0x06
    1432:	00 97       	sbiw	r24, 0x00	; 0
    1434:	69 f7       	brne	.-38     	; 0x1410 <main+0x6f6>
    1436:	8d cc       	rjmp	.-1766   	; 0xd52 <main+0x38>
    1438:	6f 81       	ldd	r22, Y+7	; 0x07
    143a:	78 85       	ldd	r23, Y+8	; 0x08
    143c:	89 85       	ldd	r24, Y+9	; 0x09
    143e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1440:	0e 94 47 00 	call	0x8e	; 0x8e <__fixunssfsi>
    1444:	dc 01       	movw	r26, r24
    1446:	cb 01       	movw	r24, r22
    1448:	9e 83       	std	Y+6, r25	; 0x06
    144a:	8d 83       	std	Y+5, r24	; 0x05
    144c:	8d 81       	ldd	r24, Y+5	; 0x05
    144e:	9e 81       	ldd	r25, Y+6	; 0x06
    1450:	9a 83       	std	Y+2, r25	; 0x02
    1452:	89 83       	std	Y+1, r24	; 0x01
    1454:	89 81       	ldd	r24, Y+1	; 0x01
    1456:	9a 81       	ldd	r25, Y+2	; 0x02
    1458:	01 97       	sbiw	r24, 0x01	; 1
    145a:	f1 f7       	brne	.-4      	; 0x1458 <main+0x73e>
    145c:	9a 83       	std	Y+2, r25	; 0x02
    145e:	89 83       	std	Y+1, r24	; 0x01
    1460:	78 cc       	rjmp	.-1808   	; 0xd52 <main+0x38>

00001462 <__prologue_saves__>:
    1462:	2f 92       	push	r2
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1464:	3f 92       	push	r3
    1466:	4f 92       	push	r4
    1468:	5f 92       	push	r5
    146a:	6f 92       	push	r6
    146c:	7f 92       	push	r7
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    146e:	8f 92       	push	r8
    1470:	9f 92       	push	r9
    1472:	af 92       	push	r10
    1474:	bf 92       	push	r11
    1476:	cf 92       	push	r12
    1478:	df 92       	push	r13
    147a:	ef 92       	push	r14
    147c:	ff 92       	push	r15
    147e:	0f 93       	push	r16
    1480:	1f 93       	push	r17
    1482:	cf 93       	push	r28
    1484:	df 93       	push	r29
    1486:	cd b7       	in	r28, 0x3d	; 61
    1488:	de b7       	in	r29, 0x3e	; 62
    148a:	ca 1b       	sub	r28, r26
    148c:	db 0b       	sbc	r29, r27
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	de bf       	out	0x3e, r29	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	cd bf       	out	0x3d, r28	; 61
    1498:	09 94       	ijmp

0000149a <__epilogue_restores__>:
    149a:	2a 88       	ldd	r2, Y+18	; 0x12
    149c:	39 88       	ldd	r3, Y+17	; 0x11
    149e:	48 88       	ldd	r4, Y+16	; 0x10
    14a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    14a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    14a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    14a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    14a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    14aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ac:	b9 84       	ldd	r11, Y+9	; 0x09
    14ae:	c8 84       	ldd	r12, Y+8	; 0x08
    14b0:	df 80       	ldd	r13, Y+7	; 0x07
    14b2:	ee 80       	ldd	r14, Y+6	; 0x06
    14b4:	fd 80       	ldd	r15, Y+5	; 0x05
    14b6:	0c 81       	ldd	r16, Y+4	; 0x04
    14b8:	1b 81       	ldd	r17, Y+3	; 0x03
    14ba:	aa 81       	ldd	r26, Y+2	; 0x02
    14bc:	b9 81       	ldd	r27, Y+1	; 0x01
    14be:	ce 0f       	add	r28, r30
    14c0:	d1 1d       	adc	r29, r1
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	f8 94       	cli
    14c6:	de bf       	out	0x3e, r29	; 62
    14c8:	0f be       	out	0x3f, r0	; 63
    14ca:	cd bf       	out	0x3d, r28	; 61
    14cc:	ed 01       	movw	r28, r26
    14ce:	08 95       	ret

000014d0 <_exit>:
    14d0:	f8 94       	cli

000014d2 <__stop_program>:
    14d2:	ff cf       	rjmp	.-2      	; 0x14d2 <__stop_program>
